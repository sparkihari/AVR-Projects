
Timer_Delay_328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000018e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000011a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000018e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000018e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006c5  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000644  00000000  00000000  000008f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000249  00000000  00000000  00000f39  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000058  00000000  00000000  00001184  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000359  00000000  00000000  000011dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000049  00000000  00000000  00001535  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  0000157e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__vector_7>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 82 00 	call	0x104	; 0x104 <main>
  88:	0c 94 8b 00 	jmp	0x116	; 0x116 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <Timer_Initailize>:

int i = 0;

static void Timer_Initailize(void)
{
	cli();
  90:	f8 94       	cli
	
	TCCR2A |= (1<<WGM21);
  92:	e0 eb       	ldi	r30, 0xB0	; 176
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	80 81       	ld	r24, Z
  98:	82 60       	ori	r24, 0x02	; 2
  9a:	80 83       	st	Z, r24
	
	TCNT2 = 0;
  9c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	
	OCR2A = 124;							// 16 us * 124  = ~ 2 ms
  a0:	8c e7       	ldi	r24, 0x7C	; 124
  a2:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	
	TIMSK2 |= (1<<OCIE2A);
  a6:	e0 e7       	ldi	r30, 0x70	; 112
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	82 60       	ori	r24, 0x02	; 2
  ae:	80 83       	st	Z, r24
	
	TCCR2B |= (1 << CS22)|(1 << CS21);		// 16 MHz / 256 = 62.5 kHz (1 tick = 16 us)
  b0:	e1 eb       	ldi	r30, 0xB1	; 177
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	86 60       	ori	r24, 0x06	; 6
  b8:	80 83       	st	Z, r24
	
	sei();
  ba:	78 94       	sei
  bc:	08 95       	ret

000000be <__vector_7>:
}

ISR(TIMER2_COMPA_vect)						// Timer Interrupt
{
  be:	1f 92       	push	r1
  c0:	0f 92       	push	r0
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	0f 92       	push	r0
  c6:	11 24       	eor	r1, r1
  c8:	8f 93       	push	r24
  ca:	9f 93       	push	r25
	if (i >= 99)							// 2 ms * 100
  cc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  d0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  d4:	83 36       	cpi	r24, 0x63	; 99
  d6:	91 05       	cpc	r25, r1
  d8:	4c f0       	brlt	.+18     	; 0xec <__vector_7+0x2e>
	{
		i=0;
  da:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  de:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		LED_TOGGLE;							// Toggle the pin for every 200 ms
  e2:	95 b1       	in	r25, 0x05	; 5
  e4:	80 e2       	ldi	r24, 0x20	; 32
  e6:	89 27       	eor	r24, r25
  e8:	85 b9       	out	0x05, r24	; 5
  ea:	05 c0       	rjmp	.+10     	; 0xf6 <__vector_7+0x38>
	}
	
	else
	{
		i++;
  ec:	01 96       	adiw	r24, 0x01	; 1
  ee:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  f2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
		
}
  f6:	9f 91       	pop	r25
  f8:	8f 91       	pop	r24
  fa:	0f 90       	pop	r0
  fc:	0f be       	out	0x3f, r0	; 63
  fe:	0f 90       	pop	r0
 100:	1f 90       	pop	r1
 102:	18 95       	reti

00000104 <main>:

int main(void)
{
	DDRB |= (1<<5);			// LED on D13 pin
 104:	84 b1       	in	r24, 0x04	; 4
 106:	80 62       	ori	r24, 0x20	; 32
 108:	84 b9       	out	0x04, r24	; 4
    
	LED_CLEAR;
 10a:	85 b1       	in	r24, 0x05	; 5
 10c:	8f 7d       	andi	r24, 0xDF	; 223
 10e:	85 b9       	out	0x05, r24	; 5
	
	Timer_Initailize();
 110:	0e 94 48 00 	call	0x90	; 0x90 <Timer_Initailize>
 114:	ff cf       	rjmp	.-2      	; 0x114 <main+0x10>

00000116 <_exit>:
 116:	f8 94       	cli

00000118 <__stop_program>:
 118:	ff cf       	rjmp	.-2      	; 0x118 <__stop_program>
