
BNO055_328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  00001a5a  00001aee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a5a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000035  00800180  00800180  00001b6e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001bcc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00001c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d8a  00000000  00000000  00001ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000897  00000000  00000000  00002a6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a3a  00000000  00000000  00003305  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b0  00000000  00000000  00003d40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d0  00000000  00000000  00003ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000531  00000000  00000000  000044c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  000049f1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
       4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <main+0x74>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <BNO055_Init+0x9c>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <i2c_init+0x2e>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d8 e0       	ldi	r29, 0x08	; 8
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	ea e5       	ldi	r30, 0x5A	; 90
     176:	fa e1       	ldi	r31, 0x1A	; 26
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	a0 38       	cpi	r26, 0x80	; 128
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	a0 e8       	ldi	r26, 0x80	; 128
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
     18e:	a5 3b       	cpi	r26, 0xB5	; 181
     190:	b2 07       	cpc	r27, r18
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
     194:	0e 94 a7 04 	call	0x94e	; 0x94e <main>
     198:	0c 94 2b 0d 	jmp	0x1a56	; 0x1a56 <_exit>

0000019c <__bad_interrupt>:
     19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <i2c_init>:
	data[(length-1)] = i2c_read_nack();

	i2c_stop();

	return 0;
}
     1a0:	0f 93       	push	r16
     1a2:	1f 93       	push	r17
     1a4:	cf 93       	push	r28
     1a6:	df 93       	push	r29
     1a8:	cd b7       	in	r28, 0x3d	; 61
     1aa:	de b7       	in	r29, 0x3e	; 62
     1ac:	08 eb       	ldi	r16, 0xB8	; 184
     1ae:	10 e0       	ldi	r17, 0x00	; 0
     1b0:	89 eb       	ldi	r24, 0xB9	; 185
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	fc 01       	movw	r30, r24
     1b6:	10 82       	st	Z, r1
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	a0 e0       	ldi	r26, 0x00	; 0
     1be:	b0 e4       	ldi	r27, 0x40	; 64
     1c0:	9c 01       	movw	r18, r24
     1c2:	ad 01       	movw	r20, r26
     1c4:	60 e0       	ldi	r22, 0x00	; 0
     1c6:	70 e0       	ldi	r23, 0x00	; 0
     1c8:	80 ec       	ldi	r24, 0xC0	; 192
     1ca:	91 e4       	ldi	r25, 0x41	; 65
     1cc:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__divsf3>
     1d0:	dc 01       	movw	r26, r24
     1d2:	cb 01       	movw	r24, r22
     1d4:	bc 01       	movw	r22, r24
     1d6:	cd 01       	movw	r24, r26
     1d8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     1dc:	dc 01       	movw	r26, r24
     1de:	cb 01       	movw	r24, r22
     1e0:	f8 01       	movw	r30, r16
     1e2:	80 83       	st	Z, r24
     1e4:	00 00       	nop
     1e6:	df 91       	pop	r29
     1e8:	cf 91       	pop	r28
     1ea:	1f 91       	pop	r17
     1ec:	0f 91       	pop	r16
     1ee:	08 95       	ret

000001f0 <i2c_start>:
     1f0:	cf 93       	push	r28
     1f2:	df 93       	push	r29
     1f4:	00 d0       	rcall	.+0      	; 0x1f6 <i2c_start+0x6>
     1f6:	cd b7       	in	r28, 0x3d	; 61
     1f8:	de b7       	in	r29, 0x3e	; 62
     1fa:	8a 83       	std	Y+2, r24	; 0x02
     1fc:	8c eb       	ldi	r24, 0xBC	; 188
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	fc 01       	movw	r30, r24
     202:	10 82       	st	Z, r1
     204:	8c eb       	ldi	r24, 0xBC	; 188
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	24 ea       	ldi	r18, 0xA4	; 164
     20a:	fc 01       	movw	r30, r24
     20c:	20 83       	st	Z, r18
     20e:	00 00       	nop
     210:	8c eb       	ldi	r24, 0xBC	; 188
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	fc 01       	movw	r30, r24
     216:	80 81       	ld	r24, Z
     218:	88 23       	and	r24, r24
     21a:	d4 f7       	brge	.-12     	; 0x210 <i2c_start+0x20>
     21c:	89 eb       	ldi	r24, 0xB9	; 185
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	fc 01       	movw	r30, r24
     222:	80 81       	ld	r24, Z
     224:	88 2f       	mov	r24, r24
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	88 7f       	andi	r24, 0xF8	; 248
     22a:	99 27       	eor	r25, r25
     22c:	08 97       	sbiw	r24, 0x08	; 8
     22e:	11 f0       	breq	.+4      	; 0x234 <i2c_start+0x44>
     230:	81 e0       	ldi	r24, 0x01	; 1
     232:	20 c0       	rjmp	.+64     	; 0x274 <i2c_start+0x84>
     234:	8b eb       	ldi	r24, 0xBB	; 187
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	2a 81       	ldd	r18, Y+2	; 0x02
     23a:	fc 01       	movw	r30, r24
     23c:	20 83       	st	Z, r18
     23e:	8c eb       	ldi	r24, 0xBC	; 188
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	24 e8       	ldi	r18, 0x84	; 132
     244:	fc 01       	movw	r30, r24
     246:	20 83       	st	Z, r18
     248:	00 00       	nop
     24a:	8c eb       	ldi	r24, 0xBC	; 188
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	fc 01       	movw	r30, r24
     250:	80 81       	ld	r24, Z
     252:	88 23       	and	r24, r24
     254:	d4 f7       	brge	.-12     	; 0x24a <i2c_start+0x5a>
     256:	89 eb       	ldi	r24, 0xB9	; 185
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	fc 01       	movw	r30, r24
     25c:	80 81       	ld	r24, Z
     25e:	88 7f       	andi	r24, 0xF8	; 248
     260:	89 83       	std	Y+1, r24	; 0x01
     262:	89 81       	ldd	r24, Y+1	; 0x01
     264:	88 31       	cpi	r24, 0x18	; 24
     266:	29 f0       	breq	.+10     	; 0x272 <i2c_start+0x82>
     268:	89 81       	ldd	r24, Y+1	; 0x01
     26a:	80 34       	cpi	r24, 0x40	; 64
     26c:	11 f0       	breq	.+4      	; 0x272 <i2c_start+0x82>
     26e:	81 e0       	ldi	r24, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <i2c_start+0x84>
     272:	80 e0       	ldi	r24, 0x00	; 0
     274:	0f 90       	pop	r0
     276:	0f 90       	pop	r0
     278:	df 91       	pop	r29
     27a:	cf 91       	pop	r28
     27c:	08 95       	ret

0000027e <i2c_write>:
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	1f 92       	push	r1
     284:	cd b7       	in	r28, 0x3d	; 61
     286:	de b7       	in	r29, 0x3e	; 62
     288:	89 83       	std	Y+1, r24	; 0x01
     28a:	8b eb       	ldi	r24, 0xBB	; 187
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	29 81       	ldd	r18, Y+1	; 0x01
     290:	fc 01       	movw	r30, r24
     292:	20 83       	st	Z, r18
     294:	8c eb       	ldi	r24, 0xBC	; 188
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	24 e8       	ldi	r18, 0x84	; 132
     29a:	fc 01       	movw	r30, r24
     29c:	20 83       	st	Z, r18
     29e:	00 00       	nop
     2a0:	8c eb       	ldi	r24, 0xBC	; 188
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	fc 01       	movw	r30, r24
     2a6:	80 81       	ld	r24, Z
     2a8:	88 23       	and	r24, r24
     2aa:	d4 f7       	brge	.-12     	; 0x2a0 <i2c_write+0x22>
     2ac:	89 eb       	ldi	r24, 0xB9	; 185
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	fc 01       	movw	r30, r24
     2b2:	80 81       	ld	r24, Z
     2b4:	88 2f       	mov	r24, r24
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	88 7f       	andi	r24, 0xF8	; 248
     2ba:	99 27       	eor	r25, r25
     2bc:	88 97       	sbiw	r24, 0x28	; 40
     2be:	11 f0       	breq	.+4      	; 0x2c4 <i2c_write+0x46>
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	01 c0       	rjmp	.+2      	; 0x2c6 <i2c_write+0x48>
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	0f 90       	pop	r0
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	08 95       	ret

000002ce <i2c_read_ack>:
     2ce:	cf 93       	push	r28
     2d0:	df 93       	push	r29
     2d2:	cd b7       	in	r28, 0x3d	; 61
     2d4:	de b7       	in	r29, 0x3e	; 62
     2d6:	8c eb       	ldi	r24, 0xBC	; 188
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	24 ec       	ldi	r18, 0xC4	; 196
     2dc:	fc 01       	movw	r30, r24
     2de:	20 83       	st	Z, r18
     2e0:	00 00       	nop
     2e2:	8c eb       	ldi	r24, 0xBC	; 188
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	fc 01       	movw	r30, r24
     2e8:	80 81       	ld	r24, Z
     2ea:	88 23       	and	r24, r24
     2ec:	d4 f7       	brge	.-12     	; 0x2e2 <i2c_read_ack+0x14>
     2ee:	8b eb       	ldi	r24, 0xBB	; 187
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	fc 01       	movw	r30, r24
     2f4:	80 81       	ld	r24, Z
     2f6:	df 91       	pop	r29
     2f8:	cf 91       	pop	r28
     2fa:	08 95       	ret

000002fc <i2c_read_nack>:
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
     304:	8c eb       	ldi	r24, 0xBC	; 188
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	24 e8       	ldi	r18, 0x84	; 132
     30a:	fc 01       	movw	r30, r24
     30c:	20 83       	st	Z, r18
     30e:	00 00       	nop
     310:	8c eb       	ldi	r24, 0xBC	; 188
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	fc 01       	movw	r30, r24
     316:	80 81       	ld	r24, Z
     318:	88 23       	and	r24, r24
     31a:	d4 f7       	brge	.-12     	; 0x310 <i2c_read_nack+0x14>
     31c:	8b eb       	ldi	r24, 0xBB	; 187
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	fc 01       	movw	r30, r24
     322:	80 81       	ld	r24, Z
     324:	df 91       	pop	r29
     326:	cf 91       	pop	r28
     328:	08 95       	ret

0000032a <i2c_stop>:

void i2c_stop(void)
{
     32a:	cf 93       	push	r28
     32c:	df 93       	push	r29
     32e:	cd b7       	in	r28, 0x3d	; 61
     330:	de b7       	in	r29, 0x3e	; 62
	// transmit STOP condition
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     332:	8c eb       	ldi	r24, 0xBC	; 188
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	24 e9       	ldi	r18, 0x94	; 148
     338:	fc 01       	movw	r30, r24
     33a:	20 83       	st	Z, r18
}
     33c:	00 00       	nop
     33e:	df 91       	pop	r29
     340:	cf 91       	pop	r28
     342:	08 95       	ret

00000344 <BNO055_Init>:
int16_t raw_x = 0, raw_y = 0, raw_z = 0;

char buffer[BUF_LEN], float_[BUF_LEN];

static void BNO055_Init(void)
{
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	cd b7       	in	r28, 0x3d	; 61
     34a:	de b7       	in	r29, 0x3e	; 62
     34c:	ab 97       	sbiw	r28, 0x2b	; 43
     34e:	0f b6       	in	r0, 0x3f	; 63
     350:	f8 94       	cli
     352:	de bf       	out	0x3e, r29	; 62
     354:	0f be       	out	0x3f, r0	; 63
     356:	cd bf       	out	0x3d, r28	; 61
	uint8_t id;
	USART_SendString("\n\r BNO055 Initialization");
     358:	80 e0       	ldi	r24, 0x00	; 0
     35a:	91 e0       	ldi	r25, 0x01	; 1
     35c:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>

	i2c_start(BNO055_WRITE);
     360:	80 e5       	ldi	r24, 0x50	; 80
     362:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <i2c_start>
	i2c_write(BNO055_CHIP_ID_ADDR);
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
	i2c_stop();
     36c:	0e 94 95 01 	call	0x32a	; 0x32a <i2c_stop>

	i2c_start(BNO055_READ);
     370:	81 e5       	ldi	r24, 0x51	; 81
     372:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <i2c_start>
	id = i2c_read_nack();
     376:	0e 94 7e 01 	call	0x2fc	; 0x2fc <i2c_read_nack>
     37a:	89 83       	std	Y+1, r24	; 0x01
	i2c_stop();
     37c:	0e 94 95 01 	call	0x32a	; 0x32a <i2c_stop>

	if (id == BNO055_CHIP_ID)
     380:	89 81       	ldd	r24, Y+1	; 0x01
     382:	80 3a       	cpi	r24, 0xA0	; 160
     384:	09 f0       	breq	.+2      	; 0x388 <BNO055_Init+0x44>
     386:	97 c1       	rjmp	.+814    	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
	{

		i2c_start(BNO055_WRITE);
     388:	80 e5       	ldi	r24, 0x50	; 80
     38a:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <i2c_start>
		i2c_write(BNO055_PAGE_ID_ADDR);
     38e:	87 e0       	ldi	r24, 0x07	; 7
     390:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
		i2c_write(0x00);
     394:	80 e0       	ldi	r24, 0x00	; 0
     396:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
		i2c_stop();
     39a:	0e 94 95 01 	call	0x32a	; 0x32a <i2c_stop>
		USART_SendString(".....");
     39e:	89 e1       	ldi	r24, 0x19	; 25
     3a0:	91 e0       	ldi	r25, 0x01	; 1
     3a2:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>

		i2c_start(BNO055_WRITE);
     3a6:	80 e5       	ldi	r24, 0x50	; 80
     3a8:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <i2c_start>
		i2c_write(BNO055_OPR_MODE_ADDR);
     3ac:	8d e3       	ldi	r24, 0x3D	; 61
     3ae:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
		i2c_write(BNO055_OPERATION_MODE_CONFIG);
     3b2:	80 e1       	ldi	r24, 0x10	; 16
     3b4:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
		i2c_stop();
     3b8:	0e 94 95 01 	call	0x32a	; 0x32a <i2c_stop>
		USART_SendString(".....");
     3bc:	89 e1       	ldi	r24, 0x19	; 25
     3be:	91 e0       	ldi	r25, 0x01	; 1
     3c0:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	a0 e8       	ldi	r26, 0x80	; 128
     3ca:	bf e3       	ldi	r27, 0x3F	; 63
     3cc:	8a 83       	std	Y+2, r24	; 0x02
     3ce:	9b 83       	std	Y+3, r25	; 0x03
     3d0:	ac 83       	std	Y+4, r26	; 0x04
     3d2:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	4a e7       	ldi	r20, 0x7A	; 122
     3da:	55 e4       	ldi	r21, 0x45	; 69
     3dc:	6a 81       	ldd	r22, Y+2	; 0x02
     3de:	7b 81       	ldd	r23, Y+3	; 0x03
     3e0:	8c 81       	ldd	r24, Y+4	; 0x04
     3e2:	9d 81       	ldd	r25, Y+5	; 0x05
     3e4:	0e 94 52 07 	call	0xea4	; 0xea4 <__mulsf3>
     3e8:	dc 01       	movw	r26, r24
     3ea:	cb 01       	movw	r24, r22
     3ec:	8a a3       	std	Y+34, r24	; 0x22
     3ee:	9b a3       	std	Y+35, r25	; 0x23
     3f0:	ac a3       	std	Y+36, r26	; 0x24
     3f2:	bd a3       	std	Y+37, r27	; 0x25
	if (__tmp < 1.0)
     3f4:	20 e0       	ldi	r18, 0x00	; 0
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	40 e8       	ldi	r20, 0x80	; 128
     3fa:	5f e3       	ldi	r21, 0x3F	; 63
     3fc:	6a a1       	ldd	r22, Y+34	; 0x22
     3fe:	7b a1       	ldd	r23, Y+35	; 0x23
     400:	8c a1       	ldd	r24, Y+36	; 0x24
     402:	9d a1       	ldd	r25, Y+37	; 0x25
     404:	0e 94 f5 05 	call	0xbea	; 0xbea <__cmpsf2>
     408:	88 23       	and	r24, r24
     40a:	2c f4       	brge	.+10     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
		__ticks = 1;
     40c:	81 e0       	ldi	r24, 0x01	; 1
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	9f a3       	std	Y+39, r25	; 0x27
     412:	8e a3       	std	Y+38, r24	; 0x26
     414:	3f c0       	rjmp	.+126    	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
	else if (__tmp > 65535)
     416:	20 e0       	ldi	r18, 0x00	; 0
     418:	3f ef       	ldi	r19, 0xFF	; 255
     41a:	4f e7       	ldi	r20, 0x7F	; 127
     41c:	57 e4       	ldi	r21, 0x47	; 71
     41e:	6a a1       	ldd	r22, Y+34	; 0x22
     420:	7b a1       	ldd	r23, Y+35	; 0x23
     422:	8c a1       	ldd	r24, Y+36	; 0x24
     424:	9d a1       	ldd	r25, Y+37	; 0x25
     426:	0e 94 4d 07 	call	0xe9a	; 0xe9a <__gesf2>
     42a:	18 16       	cp	r1, r24
     42c:	4c f5       	brge	.+82     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     42e:	20 e0       	ldi	r18, 0x00	; 0
     430:	30 e0       	ldi	r19, 0x00	; 0
     432:	40 e2       	ldi	r20, 0x20	; 32
     434:	51 e4       	ldi	r21, 0x41	; 65
     436:	6a 81       	ldd	r22, Y+2	; 0x02
     438:	7b 81       	ldd	r23, Y+3	; 0x03
     43a:	8c 81       	ldd	r24, Y+4	; 0x04
     43c:	9d 81       	ldd	r25, Y+5	; 0x05
     43e:	0e 94 52 07 	call	0xea4	; 0xea4 <__mulsf3>
     442:	dc 01       	movw	r26, r24
     444:	cb 01       	movw	r24, r22
     446:	bc 01       	movw	r22, r24
     448:	cd 01       	movw	r24, r26
     44a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     44e:	dc 01       	movw	r26, r24
     450:	cb 01       	movw	r24, r22
     452:	9f a3       	std	Y+39, r25	; 0x27
     454:	8e a3       	std	Y+38, r24	; 0x26
     456:	0f c0       	rjmp	.+30     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
     458:	80 e9       	ldi	r24, 0x90	; 144
     45a:	91 e0       	ldi	r25, 0x01	; 1
     45c:	99 a7       	std	Y+41, r25	; 0x29
     45e:	88 a7       	std	Y+40, r24	; 0x28
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     460:	88 a5       	ldd	r24, Y+40	; 0x28
     462:	99 a5       	ldd	r25, Y+41	; 0x29
     464:	01 97       	sbiw	r24, 0x01	; 1
     466:	f1 f7       	brne	.-4      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
     468:	99 a7       	std	Y+41, r25	; 0x29
     46a:	88 a7       	std	Y+40, r24	; 0x28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     46c:	8e a1       	ldd	r24, Y+38	; 0x26
     46e:	9f a1       	ldd	r25, Y+39	; 0x27
     470:	01 97       	sbiw	r24, 0x01	; 1
     472:	9f a3       	std	Y+39, r25	; 0x27
     474:	8e a3       	std	Y+38, r24	; 0x26
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     476:	8e a1       	ldd	r24, Y+38	; 0x26
     478:	9f a1       	ldd	r25, Y+39	; 0x27
     47a:	89 2b       	or	r24, r25
     47c:	69 f7       	brne	.-38     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     47e:	14 c0       	rjmp	.+40     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     480:	6a a1       	ldd	r22, Y+34	; 0x22
     482:	7b a1       	ldd	r23, Y+35	; 0x23
     484:	8c a1       	ldd	r24, Y+36	; 0x24
     486:	9d a1       	ldd	r25, Y+37	; 0x25
     488:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     48c:	dc 01       	movw	r26, r24
     48e:	cb 01       	movw	r24, r22
     490:	9f a3       	std	Y+39, r25	; 0x27
     492:	8e a3       	std	Y+38, r24	; 0x26
     494:	8e a1       	ldd	r24, Y+38	; 0x26
     496:	9f a1       	ldd	r25, Y+39	; 0x27
     498:	9b a7       	std	Y+43, r25	; 0x2b
     49a:	8a a7       	std	Y+42, r24	; 0x2a
     49c:	8a a5       	ldd	r24, Y+42	; 0x2a
     49e:	9b a5       	ldd	r25, Y+43	; 0x2b
     4a0:	01 97       	sbiw	r24, 0x01	; 1
     4a2:	f1 f7       	brne	.-4      	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
     4a4:	9b a7       	std	Y+43, r25	; 0x2b
     4a6:	8a a7       	std	Y+42, r24	; 0x2a
		_delay_ms(1);

		i2c_start(BNO055_WRITE);
     4a8:	80 e5       	ldi	r24, 0x50	; 80
     4aa:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <i2c_start>
		i2c_write(BNO055_PWR_MODE_ADDR);
     4ae:	8e e3       	ldi	r24, 0x3E	; 62
     4b0:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
		i2c_write(BNO055_POWER_MODE_NORMAL);
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
		i2c_stop();
     4ba:	0e 94 95 01 	call	0x32a	; 0x32a <i2c_stop>
		USART_SendString(".....");
     4be:	89 e1       	ldi	r24, 0x19	; 25
     4c0:	91 e0       	ldi	r25, 0x01	; 1
     4c2:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	a0 e8       	ldi	r26, 0x80	; 128
     4cc:	bf e3       	ldi	r27, 0x3F	; 63
     4ce:	8e 83       	std	Y+6, r24	; 0x06
     4d0:	9f 83       	std	Y+7, r25	; 0x07
     4d2:	a8 87       	std	Y+8, r26	; 0x08
     4d4:	b9 87       	std	Y+9, r27	; 0x09

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     4d6:	20 e0       	ldi	r18, 0x00	; 0
     4d8:	30 e0       	ldi	r19, 0x00	; 0
     4da:	4a e7       	ldi	r20, 0x7A	; 122
     4dc:	55 e4       	ldi	r21, 0x45	; 69
     4de:	6e 81       	ldd	r22, Y+6	; 0x06
     4e0:	7f 81       	ldd	r23, Y+7	; 0x07
     4e2:	88 85       	ldd	r24, Y+8	; 0x08
     4e4:	99 85       	ldd	r25, Y+9	; 0x09
     4e6:	0e 94 52 07 	call	0xea4	; 0xea4 <__mulsf3>
     4ea:	dc 01       	movw	r26, r24
     4ec:	cb 01       	movw	r24, r22
     4ee:	88 8f       	std	Y+24, r24	; 0x18
     4f0:	99 8f       	std	Y+25, r25	; 0x19
     4f2:	aa 8f       	std	Y+26, r26	; 0x1a
     4f4:	bb 8f       	std	Y+27, r27	; 0x1b
	if (__tmp < 1.0)
     4f6:	20 e0       	ldi	r18, 0x00	; 0
     4f8:	30 e0       	ldi	r19, 0x00	; 0
     4fa:	40 e8       	ldi	r20, 0x80	; 128
     4fc:	5f e3       	ldi	r21, 0x3F	; 63
     4fe:	68 8d       	ldd	r22, Y+24	; 0x18
     500:	79 8d       	ldd	r23, Y+25	; 0x19
     502:	8a 8d       	ldd	r24, Y+26	; 0x1a
     504:	9b 8d       	ldd	r25, Y+27	; 0x1b
     506:	0e 94 f5 05 	call	0xbea	; 0xbea <__cmpsf2>
     50a:	88 23       	and	r24, r24
     50c:	2c f4       	brge	.+10     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
		__ticks = 1;
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	9d 8f       	std	Y+29, r25	; 0x1d
     514:	8c 8f       	std	Y+28, r24	; 0x1c
     516:	3f c0       	rjmp	.+126    	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
	else if (__tmp > 65535)
     518:	20 e0       	ldi	r18, 0x00	; 0
     51a:	3f ef       	ldi	r19, 0xFF	; 255
     51c:	4f e7       	ldi	r20, 0x7F	; 127
     51e:	57 e4       	ldi	r21, 0x47	; 71
     520:	68 8d       	ldd	r22, Y+24	; 0x18
     522:	79 8d       	ldd	r23, Y+25	; 0x19
     524:	8a 8d       	ldd	r24, Y+26	; 0x1a
     526:	9b 8d       	ldd	r25, Y+27	; 0x1b
     528:	0e 94 4d 07 	call	0xe9a	; 0xe9a <__gesf2>
     52c:	18 16       	cp	r1, r24
     52e:	4c f5       	brge	.+82     	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	40 e2       	ldi	r20, 0x20	; 32
     536:	51 e4       	ldi	r21, 0x41	; 65
     538:	6e 81       	ldd	r22, Y+6	; 0x06
     53a:	7f 81       	ldd	r23, Y+7	; 0x07
     53c:	88 85       	ldd	r24, Y+8	; 0x08
     53e:	99 85       	ldd	r25, Y+9	; 0x09
     540:	0e 94 52 07 	call	0xea4	; 0xea4 <__mulsf3>
     544:	dc 01       	movw	r26, r24
     546:	cb 01       	movw	r24, r22
     548:	bc 01       	movw	r22, r24
     54a:	cd 01       	movw	r24, r26
     54c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     550:	dc 01       	movw	r26, r24
     552:	cb 01       	movw	r24, r22
     554:	9d 8f       	std	Y+29, r25	; 0x1d
     556:	8c 8f       	std	Y+28, r24	; 0x1c
     558:	0f c0       	rjmp	.+30     	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
     55a:	80 e9       	ldi	r24, 0x90	; 144
     55c:	91 e0       	ldi	r25, 0x01	; 1
     55e:	9f 8f       	std	Y+31, r25	; 0x1f
     560:	8e 8f       	std	Y+30, r24	; 0x1e
     562:	8e 8d       	ldd	r24, Y+30	; 0x1e
     564:	9f 8d       	ldd	r25, Y+31	; 0x1f
     566:	01 97       	sbiw	r24, 0x01	; 1
     568:	f1 f7       	brne	.-4      	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
     56a:	9f 8f       	std	Y+31, r25	; 0x1f
     56c:	8e 8f       	std	Y+30, r24	; 0x1e
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     56e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     570:	9d 8d       	ldd	r25, Y+29	; 0x1d
     572:	01 97       	sbiw	r24, 0x01	; 1
     574:	9d 8f       	std	Y+29, r25	; 0x1d
     576:	8c 8f       	std	Y+28, r24	; 0x1c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     578:	8c 8d       	ldd	r24, Y+28	; 0x1c
     57a:	9d 8d       	ldd	r25, Y+29	; 0x1d
     57c:	89 2b       	or	r24, r25
     57e:	69 f7       	brne	.-38     	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
     580:	14 c0       	rjmp	.+40     	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     582:	68 8d       	ldd	r22, Y+24	; 0x18
     584:	79 8d       	ldd	r23, Y+25	; 0x19
     586:	8a 8d       	ldd	r24, Y+26	; 0x1a
     588:	9b 8d       	ldd	r25, Y+27	; 0x1b
     58a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     58e:	dc 01       	movw	r26, r24
     590:	cb 01       	movw	r24, r22
     592:	9d 8f       	std	Y+29, r25	; 0x1d
     594:	8c 8f       	std	Y+28, r24	; 0x1c
     596:	8c 8d       	ldd	r24, Y+28	; 0x1c
     598:	9d 8d       	ldd	r25, Y+29	; 0x1d
     59a:	99 a3       	std	Y+33, r25	; 0x21
     59c:	88 a3       	std	Y+32, r24	; 0x20
     59e:	88 a1       	ldd	r24, Y+32	; 0x20
     5a0:	99 a1       	ldd	r25, Y+33	; 0x21
     5a2:	01 97       	sbiw	r24, 0x01	; 1
     5a4:	f1 f7       	brne	.-4      	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
     5a6:	99 a3       	std	Y+33, r25	; 0x21
     5a8:	88 a3       	std	Y+32, r24	; 0x20
		_delay_ms(1);

		i2c_start(BNO055_WRITE);
     5aa:	80 e5       	ldi	r24, 0x50	; 80
     5ac:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <i2c_start>
		i2c_write(BNO055_OPR_MODE_ADDR);
     5b0:	8d e3       	ldi	r24, 0x3D	; 61
     5b2:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
		i2c_write(BNO055_OPERATION_MODE_NDOF);
     5b6:	8c e1       	ldi	r24, 0x1C	; 28
     5b8:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
		i2c_stop();
     5bc:	0e 94 95 01 	call	0x32a	; 0x32a <i2c_stop>
		USART_SendString(".....");
     5c0:	89 e1       	ldi	r24, 0x19	; 25
     5c2:	91 e0       	ldi	r25, 0x01	; 1
     5c4:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>
     5c8:	80 e0       	ldi	r24, 0x00	; 0
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	a0 e8       	ldi	r26, 0x80	; 128
     5ce:	bf e3       	ldi	r27, 0x3F	; 63
     5d0:	8a 87       	std	Y+10, r24	; 0x0a
     5d2:	9b 87       	std	Y+11, r25	; 0x0b
     5d4:	ac 87       	std	Y+12, r26	; 0x0c
     5d6:	bd 87       	std	Y+13, r27	; 0x0d

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	4a e7       	ldi	r20, 0x7A	; 122
     5de:	55 e4       	ldi	r21, 0x45	; 69
     5e0:	6a 85       	ldd	r22, Y+10	; 0x0a
     5e2:	7b 85       	ldd	r23, Y+11	; 0x0b
     5e4:	8c 85       	ldd	r24, Y+12	; 0x0c
     5e6:	9d 85       	ldd	r25, Y+13	; 0x0d
     5e8:	0e 94 52 07 	call	0xea4	; 0xea4 <__mulsf3>
     5ec:	dc 01       	movw	r26, r24
     5ee:	cb 01       	movw	r24, r22
     5f0:	8e 87       	std	Y+14, r24	; 0x0e
     5f2:	9f 87       	std	Y+15, r25	; 0x0f
     5f4:	a8 8b       	std	Y+16, r26	; 0x10
     5f6:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     5f8:	20 e0       	ldi	r18, 0x00	; 0
     5fa:	30 e0       	ldi	r19, 0x00	; 0
     5fc:	40 e8       	ldi	r20, 0x80	; 128
     5fe:	5f e3       	ldi	r21, 0x3F	; 63
     600:	6e 85       	ldd	r22, Y+14	; 0x0e
     602:	7f 85       	ldd	r23, Y+15	; 0x0f
     604:	88 89       	ldd	r24, Y+16	; 0x10
     606:	99 89       	ldd	r25, Y+17	; 0x11
     608:	0e 94 f5 05 	call	0xbea	; 0xbea <__cmpsf2>
     60c:	88 23       	and	r24, r24
     60e:	2c f4       	brge	.+10     	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
		__ticks = 1;
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	9b 8b       	std	Y+19, r25	; 0x13
     616:	8a 8b       	std	Y+18, r24	; 0x12
     618:	3f c0       	rjmp	.+126    	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
	else if (__tmp > 65535)
     61a:	20 e0       	ldi	r18, 0x00	; 0
     61c:	3f ef       	ldi	r19, 0xFF	; 255
     61e:	4f e7       	ldi	r20, 0x7F	; 127
     620:	57 e4       	ldi	r21, 0x47	; 71
     622:	6e 85       	ldd	r22, Y+14	; 0x0e
     624:	7f 85       	ldd	r23, Y+15	; 0x0f
     626:	88 89       	ldd	r24, Y+16	; 0x10
     628:	99 89       	ldd	r25, Y+17	; 0x11
     62a:	0e 94 4d 07 	call	0xe9a	; 0xe9a <__gesf2>
     62e:	18 16       	cp	r1, r24
     630:	4c f5       	brge	.+82     	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     632:	20 e0       	ldi	r18, 0x00	; 0
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	40 e2       	ldi	r20, 0x20	; 32
     638:	51 e4       	ldi	r21, 0x41	; 65
     63a:	6a 85       	ldd	r22, Y+10	; 0x0a
     63c:	7b 85       	ldd	r23, Y+11	; 0x0b
     63e:	8c 85       	ldd	r24, Y+12	; 0x0c
     640:	9d 85       	ldd	r25, Y+13	; 0x0d
     642:	0e 94 52 07 	call	0xea4	; 0xea4 <__mulsf3>
     646:	dc 01       	movw	r26, r24
     648:	cb 01       	movw	r24, r22
     64a:	bc 01       	movw	r22, r24
     64c:	cd 01       	movw	r24, r26
     64e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     652:	dc 01       	movw	r26, r24
     654:	cb 01       	movw	r24, r22
     656:	9b 8b       	std	Y+19, r25	; 0x13
     658:	8a 8b       	std	Y+18, r24	; 0x12
     65a:	0f c0       	rjmp	.+30     	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
     65c:	80 e9       	ldi	r24, 0x90	; 144
     65e:	91 e0       	ldi	r25, 0x01	; 1
     660:	9d 8b       	std	Y+21, r25	; 0x15
     662:	8c 8b       	std	Y+20, r24	; 0x14
     664:	8c 89       	ldd	r24, Y+20	; 0x14
     666:	9d 89       	ldd	r25, Y+21	; 0x15
     668:	01 97       	sbiw	r24, 0x01	; 1
     66a:	f1 f7       	brne	.-4      	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
     66c:	9d 8b       	std	Y+21, r25	; 0x15
     66e:	8c 8b       	std	Y+20, r24	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     670:	8a 89       	ldd	r24, Y+18	; 0x12
     672:	9b 89       	ldd	r25, Y+19	; 0x13
     674:	01 97       	sbiw	r24, 0x01	; 1
     676:	9b 8b       	std	Y+19, r25	; 0x13
     678:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     67a:	8a 89       	ldd	r24, Y+18	; 0x12
     67c:	9b 89       	ldd	r25, Y+19	; 0x13
     67e:	89 2b       	or	r24, r25
     680:	69 f7       	brne	.-38     	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
     682:	14 c0       	rjmp	.+40     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     684:	6e 85       	ldd	r22, Y+14	; 0x0e
     686:	7f 85       	ldd	r23, Y+15	; 0x0f
     688:	88 89       	ldd	r24, Y+16	; 0x10
     68a:	99 89       	ldd	r25, Y+17	; 0x11
     68c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     690:	dc 01       	movw	r26, r24
     692:	cb 01       	movw	r24, r22
     694:	9b 8b       	std	Y+19, r25	; 0x13
     696:	8a 8b       	std	Y+18, r24	; 0x12
     698:	8a 89       	ldd	r24, Y+18	; 0x12
     69a:	9b 89       	ldd	r25, Y+19	; 0x13
     69c:	9f 8b       	std	Y+23, r25	; 0x17
     69e:	8e 8b       	std	Y+22, r24	; 0x16
     6a0:	8e 89       	ldd	r24, Y+22	; 0x16
     6a2:	9f 89       	ldd	r25, Y+23	; 0x17
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
     6a8:	9f 8b       	std	Y+23, r25	; 0x17
     6aa:	8e 8b       	std	Y+22, r24	; 0x16
		_delay_ms(1);
		
		USART_SendString(".....Completed\n\r\n\r");
     6ac:	8f e1       	ldi	r24, 0x1F	; 31
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>
	else
	{
		USART_SendString(".....Failed\n\r");

	}
}
     6b4:	04 c0       	rjmp	.+8      	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
		USART_SendString(".....Completed\n\r\n\r");

	}
	else
	{
		USART_SendString(".....Failed\n\r");
     6b6:	82 e3       	ldi	r24, 0x32	; 50
     6b8:	91 e0       	ldi	r25, 0x01	; 1
     6ba:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>

	}
}
     6be:	00 00       	nop
     6c0:	ab 96       	adiw	r28, 0x2b	; 43
     6c2:	0f b6       	in	r0, 0x3f	; 63
     6c4:	f8 94       	cli
     6c6:	de bf       	out	0x3e, r29	; 62
     6c8:	0f be       	out	0x3f, r0	; 63
     6ca:	cd bf       	out	0x3d, r28	; 61
     6cc:	df 91       	pop	r29
     6ce:	cf 91       	pop	r28
     6d0:	08 95       	ret

000006d2 <Read_value>:

static void Read_value(void)
{
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	cd b7       	in	r28, 0x3d	; 61
     6d8:	de b7       	in	r29, 0x3e	; 62
	i2c_start(BNO055_WRITE);
     6da:	80 e5       	ldi	r24, 0x50	; 80
     6dc:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <i2c_start>
	i2c_write(BNO055_EULER_H_LSB_ADDR);
     6e0:	8a e1       	ldi	r24, 0x1A	; 26
     6e2:	0e 94 3f 01 	call	0x27e	; 0x27e <i2c_write>
	i2c_stop();
     6e6:	0e 94 95 01 	call	0x32a	; 0x32a <i2c_stop>

	i2c_start(BNO055_READ);
     6ea:	81 e5       	ldi	r24, 0x51	; 81
     6ec:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <i2c_start>

	raw[0] = i2c_read_ack();
     6f0:	0e 94 67 01 	call	0x2ce	; 0x2ce <i2c_read_ack>
     6f4:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__data_end>
	raw[1]=  i2c_read_ack();
     6f8:	0e 94 67 01 	call	0x2ce	; 0x2ce <i2c_read_ack>
     6fc:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <__data_end+0x1>

	raw[2] = i2c_read_ack();
     700:	0e 94 67 01 	call	0x2ce	; 0x2ce <i2c_read_ack>
     704:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end+0x2>
	raw[3] = i2c_read_ack();
     708:	0e 94 67 01 	call	0x2ce	; 0x2ce <i2c_read_ack>
     70c:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x3>

	raw[4] = i2c_read_ack();
     710:	0e 94 67 01 	call	0x2ce	; 0x2ce <i2c_read_ack>
     714:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <__data_end+0x4>
	raw[5] = i2c_read_nack();
     718:	0e 94 7e 01 	call	0x2fc	; 0x2fc <i2c_read_nack>
     71c:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <__data_end+0x5>

	i2c_stop();
     720:	0e 94 95 01 	call	0x32a	; 0x32a <i2c_stop>
	
	raw_z =(((int16_t)raw[1] << 8) | raw[0])/16 ;       // Turn the MSB and LSB into a signed 16-bit value
     724:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <__data_end+0x1>
     728:	88 2f       	mov	r24, r24
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	38 2f       	mov	r19, r24
     72e:	22 27       	eor	r18, r18
     730:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <__data_end>
     734:	88 2f       	mov	r24, r24
     736:	90 e0       	ldi	r25, 0x00	; 0
     738:	82 2b       	or	r24, r18
     73a:	93 2b       	or	r25, r19
     73c:	99 23       	and	r25, r25
     73e:	0c f4       	brge	.+2      	; 0x742 <Read_value+0x70>
     740:	0f 96       	adiw	r24, 0x0f	; 15
     742:	95 95       	asr	r25
     744:	87 95       	ror	r24
     746:	95 95       	asr	r25
     748:	87 95       	ror	r24
     74a:	95 95       	asr	r25
     74c:	87 95       	ror	r24
     74e:	95 95       	asr	r25
     750:	87 95       	ror	r24
     752:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <raw_z+0x1>
     756:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <raw_z>
	raw_y =(((int16_t)raw[3] << 8) | raw[2])/16 ;
     75a:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <__data_end+0x3>
     75e:	88 2f       	mov	r24, r24
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	38 2f       	mov	r19, r24
     764:	22 27       	eor	r18, r18
     766:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <__data_end+0x2>
     76a:	88 2f       	mov	r24, r24
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	82 2b       	or	r24, r18
     770:	93 2b       	or	r25, r19
     772:	99 23       	and	r25, r25
     774:	0c f4       	brge	.+2      	; 0x778 <Read_value+0xa6>
     776:	0f 96       	adiw	r24, 0x0f	; 15
     778:	95 95       	asr	r25
     77a:	87 95       	ror	r24
     77c:	95 95       	asr	r25
     77e:	87 95       	ror	r24
     780:	95 95       	asr	r25
     782:	87 95       	ror	r24
     784:	95 95       	asr	r25
     786:	87 95       	ror	r24
     788:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <raw_y+0x1>
     78c:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <raw_y>
	raw_x =(((int16_t)raw[5] << 8) | raw[4])/16 ;
     790:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <__data_end+0x5>
     794:	88 2f       	mov	r24, r24
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	38 2f       	mov	r19, r24
     79a:	22 27       	eor	r18, r18
     79c:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <__data_end+0x4>
     7a0:	88 2f       	mov	r24, r24
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 2b       	or	r24, r18
     7a6:	93 2b       	or	r25, r19
     7a8:	99 23       	and	r25, r25
     7aa:	0c f4       	brge	.+2      	; 0x7ae <Read_value+0xdc>
     7ac:	0f 96       	adiw	r24, 0x0f	; 15
     7ae:	95 95       	asr	r25
     7b0:	87 95       	ror	r24
     7b2:	95 95       	asr	r25
     7b4:	87 95       	ror	r24
     7b6:	95 95       	asr	r25
     7b8:	87 95       	ror	r24
     7ba:	95 95       	asr	r25
     7bc:	87 95       	ror	r24
     7be:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <raw_x+0x1>
     7c2:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <raw_x>

}
     7c6:	00 00       	nop
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	08 95       	ret

000007ce <Print_Angle>:


static void Print_Angle()
{
     7ce:	0f 93       	push	r16
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	cd b7       	in	r28, 0x3d	; 61
     7d8:	de b7       	in	r29, 0x3e	; 62
	
	dtostrf( raw_x, 3, 2, float_ );
     7da:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <raw_x>
     7de:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <raw_x+0x1>
     7e2:	09 2e       	mov	r0, r25
     7e4:	00 0c       	add	r0, r0
     7e6:	aa 0b       	sbc	r26, r26
     7e8:	bb 0b       	sbc	r27, r27
     7ea:	bc 01       	movw	r22, r24
     7ec:	cd 01       	movw	r24, r26
     7ee:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     7f2:	dc 01       	movw	r26, r24
     7f4:	cb 01       	movw	r24, r22
     7f6:	0c e8       	ldi	r16, 0x8C	; 140
     7f8:	11 e0       	ldi	r17, 0x01	; 1
     7fa:	22 e0       	ldi	r18, 0x02	; 2
     7fc:	43 e0       	ldi	r20, 0x03	; 3
     7fe:	bc 01       	movw	r22, r24
     800:	cd 01       	movw	r24, r26
     802:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <dtostrf>
	snprintf(buffer,BUF_LEN,"\n\r X-axis: %s\t ",float_);
     806:	8c e8       	ldi	r24, 0x8C	; 140
     808:	91 e0       	ldi	r25, 0x01	; 1
     80a:	89 2f       	mov	r24, r25
     80c:	8f 93       	push	r24
     80e:	8c e8       	ldi	r24, 0x8C	; 140
     810:	91 e0       	ldi	r25, 0x01	; 1
     812:	8f 93       	push	r24
     814:	80 e4       	ldi	r24, 0x40	; 64
     816:	91 e0       	ldi	r25, 0x01	; 1
     818:	89 2f       	mov	r24, r25
     81a:	8f 93       	push	r24
     81c:	80 e4       	ldi	r24, 0x40	; 64
     81e:	91 e0       	ldi	r25, 0x01	; 1
     820:	8f 93       	push	r24
     822:	1f 92       	push	r1
     824:	84 e1       	ldi	r24, 0x14	; 20
     826:	8f 93       	push	r24
     828:	81 ea       	ldi	r24, 0xA1	; 161
     82a:	91 e0       	ldi	r25, 0x01	; 1
     82c:	89 2f       	mov	r24, r25
     82e:	8f 93       	push	r24
     830:	81 ea       	ldi	r24, 0xA1	; 161
     832:	91 e0       	ldi	r25, 0x01	; 1
     834:	8f 93       	push	r24
     836:	0e 94 01 08 	call	0x1002	; 0x1002 <snprintf>
     83a:	8d b7       	in	r24, 0x3d	; 61
     83c:	9e b7       	in	r25, 0x3e	; 62
     83e:	08 96       	adiw	r24, 0x08	; 8
     840:	0f b6       	in	r0, 0x3f	; 63
     842:	f8 94       	cli
     844:	de bf       	out	0x3e, r29	; 62
     846:	0f be       	out	0x3f, r0	; 63
     848:	cd bf       	out	0x3d, r28	; 61
	USART_SendString(buffer);
     84a:	81 ea       	ldi	r24, 0xA1	; 161
     84c:	91 e0       	ldi	r25, 0x01	; 1
     84e:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>
	
	dtostrf( raw_y, 3, 2, float_ );
     852:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <raw_y>
     856:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <raw_y+0x1>
     85a:	09 2e       	mov	r0, r25
     85c:	00 0c       	add	r0, r0
     85e:	aa 0b       	sbc	r26, r26
     860:	bb 0b       	sbc	r27, r27
     862:	bc 01       	movw	r22, r24
     864:	cd 01       	movw	r24, r26
     866:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     86a:	dc 01       	movw	r26, r24
     86c:	cb 01       	movw	r24, r22
     86e:	0c e8       	ldi	r16, 0x8C	; 140
     870:	11 e0       	ldi	r17, 0x01	; 1
     872:	22 e0       	ldi	r18, 0x02	; 2
     874:	43 e0       	ldi	r20, 0x03	; 3
     876:	bc 01       	movw	r22, r24
     878:	cd 01       	movw	r24, r26
     87a:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <dtostrf>
	snprintf(buffer,BUF_LEN,"Y-axis: %s\t ",float_);
     87e:	8c e8       	ldi	r24, 0x8C	; 140
     880:	91 e0       	ldi	r25, 0x01	; 1
     882:	89 2f       	mov	r24, r25
     884:	8f 93       	push	r24
     886:	8c e8       	ldi	r24, 0x8C	; 140
     888:	91 e0       	ldi	r25, 0x01	; 1
     88a:	8f 93       	push	r24
     88c:	80 e5       	ldi	r24, 0x50	; 80
     88e:	91 e0       	ldi	r25, 0x01	; 1
     890:	89 2f       	mov	r24, r25
     892:	8f 93       	push	r24
     894:	80 e5       	ldi	r24, 0x50	; 80
     896:	91 e0       	ldi	r25, 0x01	; 1
     898:	8f 93       	push	r24
     89a:	1f 92       	push	r1
     89c:	84 e1       	ldi	r24, 0x14	; 20
     89e:	8f 93       	push	r24
     8a0:	81 ea       	ldi	r24, 0xA1	; 161
     8a2:	91 e0       	ldi	r25, 0x01	; 1
     8a4:	89 2f       	mov	r24, r25
     8a6:	8f 93       	push	r24
     8a8:	81 ea       	ldi	r24, 0xA1	; 161
     8aa:	91 e0       	ldi	r25, 0x01	; 1
     8ac:	8f 93       	push	r24
     8ae:	0e 94 01 08 	call	0x1002	; 0x1002 <snprintf>
     8b2:	8d b7       	in	r24, 0x3d	; 61
     8b4:	9e b7       	in	r25, 0x3e	; 62
     8b6:	08 96       	adiw	r24, 0x08	; 8
     8b8:	0f b6       	in	r0, 0x3f	; 63
     8ba:	f8 94       	cli
     8bc:	de bf       	out	0x3e, r29	; 62
     8be:	0f be       	out	0x3f, r0	; 63
     8c0:	cd bf       	out	0x3d, r28	; 61
	USART_SendString(buffer);
     8c2:	81 ea       	ldi	r24, 0xA1	; 161
     8c4:	91 e0       	ldi	r25, 0x01	; 1
     8c6:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>

	dtostrf( raw_z, 3, 2, float_ );
     8ca:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <raw_z>
     8ce:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <raw_z+0x1>
     8d2:	09 2e       	mov	r0, r25
     8d4:	00 0c       	add	r0, r0
     8d6:	aa 0b       	sbc	r26, r26
     8d8:	bb 0b       	sbc	r27, r27
     8da:	bc 01       	movw	r22, r24
     8dc:	cd 01       	movw	r24, r26
     8de:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     8e2:	dc 01       	movw	r26, r24
     8e4:	cb 01       	movw	r24, r22
     8e6:	0c e8       	ldi	r16, 0x8C	; 140
     8e8:	11 e0       	ldi	r17, 0x01	; 1
     8ea:	22 e0       	ldi	r18, 0x02	; 2
     8ec:	43 e0       	ldi	r20, 0x03	; 3
     8ee:	bc 01       	movw	r22, r24
     8f0:	cd 01       	movw	r24, r26
     8f2:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <dtostrf>
	snprintf(buffer,BUF_LEN,"Z-axis: %s\t ",float_);
     8f6:	8c e8       	ldi	r24, 0x8C	; 140
     8f8:	91 e0       	ldi	r25, 0x01	; 1
     8fa:	89 2f       	mov	r24, r25
     8fc:	8f 93       	push	r24
     8fe:	8c e8       	ldi	r24, 0x8C	; 140
     900:	91 e0       	ldi	r25, 0x01	; 1
     902:	8f 93       	push	r24
     904:	8d e5       	ldi	r24, 0x5D	; 93
     906:	91 e0       	ldi	r25, 0x01	; 1
     908:	89 2f       	mov	r24, r25
     90a:	8f 93       	push	r24
     90c:	8d e5       	ldi	r24, 0x5D	; 93
     90e:	91 e0       	ldi	r25, 0x01	; 1
     910:	8f 93       	push	r24
     912:	1f 92       	push	r1
     914:	84 e1       	ldi	r24, 0x14	; 20
     916:	8f 93       	push	r24
     918:	81 ea       	ldi	r24, 0xA1	; 161
     91a:	91 e0       	ldi	r25, 0x01	; 1
     91c:	89 2f       	mov	r24, r25
     91e:	8f 93       	push	r24
     920:	81 ea       	ldi	r24, 0xA1	; 161
     922:	91 e0       	ldi	r25, 0x01	; 1
     924:	8f 93       	push	r24
     926:	0e 94 01 08 	call	0x1002	; 0x1002 <snprintf>
     92a:	8d b7       	in	r24, 0x3d	; 61
     92c:	9e b7       	in	r25, 0x3e	; 62
     92e:	08 96       	adiw	r24, 0x08	; 8
     930:	0f b6       	in	r0, 0x3f	; 63
     932:	f8 94       	cli
     934:	de bf       	out	0x3e, r29	; 62
     936:	0f be       	out	0x3f, r0	; 63
     938:	cd bf       	out	0x3d, r28	; 61
	USART_SendString(buffer);
     93a:	81 ea       	ldi	r24, 0xA1	; 161
     93c:	91 e0       	ldi	r25, 0x01	; 1
     93e:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>
	
}
     942:	00 00       	nop
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	0f 91       	pop	r16
     94c:	08 95       	ret

0000094e <main>:

int main(void)
{
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	cd b7       	in	r28, 0x3d	; 61
     954:	de b7       	in	r29, 0x3e	; 62
     956:	2e 97       	sbiw	r28, 0x0e	; 14
     958:	0f b6       	in	r0, 0x3f	; 63
     95a:	f8 94       	cli
     95c:	de bf       	out	0x3e, r29	; 62
     95e:	0f be       	out	0x3f, r0	; 63
     960:	cd bf       	out	0x3d, r28	; 61
	i2c_init();								// Initialize I2C	-> 400 kHz
     962:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <i2c_init>
	USART_Init(9600);						// Initialize UART	-> 9600 Buadrate
     966:	60 e8       	ldi	r22, 0x80	; 128
     968:	75 e2       	ldi	r23, 0x25	; 37
     96a:	80 e0       	ldi	r24, 0x00	; 0
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	0e 94 36 05 	call	0xa6c	; 0xa6c <USART_Init>
	USART_SendString("\n\r BNO055 IMU Test \n\r");
     972:	8a e6       	ldi	r24, 0x6A	; 106
     974:	91 e0       	ldi	r25, 0x01	; 1
     976:	0e 94 c9 05 	call	0xb92	; 0xb92 <USART_SendString>
	
	BNO055_Init();							// Initialize BNO055-> Internal Clock Source
     97a:	0e 94 a2 01 	call	0x344	; 0x344 <BNO055_Init>

    while (1) 
    {
		Read_value();
     97e:	0e 94 69 03 	call	0x6d2	; 0x6d2 <Read_value>
		Print_Angle();
     982:	0e 94 e7 03 	call	0x7ce	; 0x7ce <Print_Angle>
     986:	80 e0       	ldi	r24, 0x00	; 0
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	a0 e2       	ldi	r26, 0x20	; 32
     98c:	b1 e4       	ldi	r27, 0x41	; 65
     98e:	89 83       	std	Y+1, r24	; 0x01
     990:	9a 83       	std	Y+2, r25	; 0x02
     992:	ab 83       	std	Y+3, r26	; 0x03
     994:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     996:	20 e0       	ldi	r18, 0x00	; 0
     998:	30 e0       	ldi	r19, 0x00	; 0
     99a:	4a e7       	ldi	r20, 0x7A	; 122
     99c:	55 e4       	ldi	r21, 0x45	; 69
     99e:	69 81       	ldd	r22, Y+1	; 0x01
     9a0:	7a 81       	ldd	r23, Y+2	; 0x02
     9a2:	8b 81       	ldd	r24, Y+3	; 0x03
     9a4:	9c 81       	ldd	r25, Y+4	; 0x04
     9a6:	0e 94 52 07 	call	0xea4	; 0xea4 <__mulsf3>
     9aa:	dc 01       	movw	r26, r24
     9ac:	cb 01       	movw	r24, r22
     9ae:	8d 83       	std	Y+5, r24	; 0x05
     9b0:	9e 83       	std	Y+6, r25	; 0x06
     9b2:	af 83       	std	Y+7, r26	; 0x07
     9b4:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     9b6:	20 e0       	ldi	r18, 0x00	; 0
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	40 e8       	ldi	r20, 0x80	; 128
     9bc:	5f e3       	ldi	r21, 0x3F	; 63
     9be:	6d 81       	ldd	r22, Y+5	; 0x05
     9c0:	7e 81       	ldd	r23, Y+6	; 0x06
     9c2:	8f 81       	ldd	r24, Y+7	; 0x07
     9c4:	98 85       	ldd	r25, Y+8	; 0x08
     9c6:	0e 94 f5 05 	call	0xbea	; 0xbea <__cmpsf2>
     9ca:	88 23       	and	r24, r24
     9cc:	2c f4       	brge	.+10     	; 0x9d8 <main+0x8a>
		__ticks = 1;
     9ce:	81 e0       	ldi	r24, 0x01	; 1
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	9a 87       	std	Y+10, r25	; 0x0a
     9d4:	89 87       	std	Y+9, r24	; 0x09
     9d6:	3f c0       	rjmp	.+126    	; 0xa56 <main+0x108>
	else if (__tmp > 65535)
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	3f ef       	ldi	r19, 0xFF	; 255
     9dc:	4f e7       	ldi	r20, 0x7F	; 127
     9de:	57 e4       	ldi	r21, 0x47	; 71
     9e0:	6d 81       	ldd	r22, Y+5	; 0x05
     9e2:	7e 81       	ldd	r23, Y+6	; 0x06
     9e4:	8f 81       	ldd	r24, Y+7	; 0x07
     9e6:	98 85       	ldd	r25, Y+8	; 0x08
     9e8:	0e 94 4d 07 	call	0xe9a	; 0xe9a <__gesf2>
     9ec:	18 16       	cp	r1, r24
     9ee:	4c f5       	brge	.+82     	; 0xa42 <main+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9f0:	20 e0       	ldi	r18, 0x00	; 0
     9f2:	30 e0       	ldi	r19, 0x00	; 0
     9f4:	40 e2       	ldi	r20, 0x20	; 32
     9f6:	51 e4       	ldi	r21, 0x41	; 65
     9f8:	69 81       	ldd	r22, Y+1	; 0x01
     9fa:	7a 81       	ldd	r23, Y+2	; 0x02
     9fc:	8b 81       	ldd	r24, Y+3	; 0x03
     9fe:	9c 81       	ldd	r25, Y+4	; 0x04
     a00:	0e 94 52 07 	call	0xea4	; 0xea4 <__mulsf3>
     a04:	dc 01       	movw	r26, r24
     a06:	cb 01       	movw	r24, r22
     a08:	bc 01       	movw	r22, r24
     a0a:	cd 01       	movw	r24, r26
     a0c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     a10:	dc 01       	movw	r26, r24
     a12:	cb 01       	movw	r24, r22
     a14:	9a 87       	std	Y+10, r25	; 0x0a
     a16:	89 87       	std	Y+9, r24	; 0x09
     a18:	0f c0       	rjmp	.+30     	; 0xa38 <main+0xea>
     a1a:	80 e9       	ldi	r24, 0x90	; 144
     a1c:	91 e0       	ldi	r25, 0x01	; 1
     a1e:	9c 87       	std	Y+12, r25	; 0x0c
     a20:	8b 87       	std	Y+11, r24	; 0x0b
     a22:	8b 85       	ldd	r24, Y+11	; 0x0b
     a24:	9c 85       	ldd	r25, Y+12	; 0x0c
     a26:	01 97       	sbiw	r24, 0x01	; 1
     a28:	f1 f7       	brne	.-4      	; 0xa26 <main+0xd8>
     a2a:	9c 87       	std	Y+12, r25	; 0x0c
     a2c:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a2e:	89 85       	ldd	r24, Y+9	; 0x09
     a30:	9a 85       	ldd	r25, Y+10	; 0x0a
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	9a 87       	std	Y+10, r25	; 0x0a
     a36:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a38:	89 85       	ldd	r24, Y+9	; 0x09
     a3a:	9a 85       	ldd	r25, Y+10	; 0x0a
     a3c:	89 2b       	or	r24, r25
     a3e:	69 f7       	brne	.-38     	; 0xa1a <main+0xcc>
     a40:	14 c0       	rjmp	.+40     	; 0xa6a <main+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a42:	6d 81       	ldd	r22, Y+5	; 0x05
     a44:	7e 81       	ldd	r23, Y+6	; 0x06
     a46:	8f 81       	ldd	r24, Y+7	; 0x07
     a48:	98 85       	ldd	r25, Y+8	; 0x08
     a4a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     a4e:	dc 01       	movw	r26, r24
     a50:	cb 01       	movw	r24, r22
     a52:	9a 87       	std	Y+10, r25	; 0x0a
     a54:	89 87       	std	Y+9, r24	; 0x09
     a56:	89 85       	ldd	r24, Y+9	; 0x09
     a58:	9a 85       	ldd	r25, Y+10	; 0x0a
     a5a:	9e 87       	std	Y+14, r25	; 0x0e
     a5c:	8d 87       	std	Y+13, r24	; 0x0d
     a5e:	8d 85       	ldd	r24, Y+13	; 0x0d
     a60:	9e 85       	ldd	r25, Y+14	; 0x0e
     a62:	01 97       	sbiw	r24, 0x01	; 1
     a64:	f1 f7       	brne	.-4      	; 0xa62 <main+0x114>
     a66:	9e 87       	std	Y+14, r25	; 0x0e
     a68:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(10);
    }
     a6a:	89 cf       	rjmp	.-238    	; 0x97e <main+0x30>

00000a6c <USART_Init>:

char USART_RxChar()								
{
	while (!(UCSR0A & (1 << RXC0)));			
	return(UDR0);								
}
     a6c:	0f 93       	push	r16
     a6e:	1f 93       	push	r17
     a70:	cf 93       	push	r28
     a72:	df 93       	push	r29
     a74:	00 d0       	rcall	.+0      	; 0xa76 <USART_Init+0xa>
     a76:	00 d0       	rcall	.+0      	; 0xa78 <USART_Init+0xc>
     a78:	cd b7       	in	r28, 0x3d	; 61
     a7a:	de b7       	in	r29, 0x3e	; 62
     a7c:	69 83       	std	Y+1, r22	; 0x01
     a7e:	7a 83       	std	Y+2, r23	; 0x02
     a80:	8b 83       	std	Y+3, r24	; 0x03
     a82:	9c 83       	std	Y+4, r25	; 0x04
     a84:	81 ec       	ldi	r24, 0xC1	; 193
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	21 ec       	ldi	r18, 0xC1	; 193
     a8a:	30 e0       	ldi	r19, 0x00	; 0
     a8c:	f9 01       	movw	r30, r18
     a8e:	20 81       	ld	r18, Z
     a90:	28 61       	ori	r18, 0x18	; 24
     a92:	fc 01       	movw	r30, r24
     a94:	20 83       	st	Z, r18
     a96:	82 ec       	ldi	r24, 0xC2	; 194
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	22 ec       	ldi	r18, 0xC2	; 194
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	f9 01       	movw	r30, r18
     aa0:	20 81       	ld	r18, Z
     aa2:	26 60       	ori	r18, 0x06	; 6
     aa4:	fc 01       	movw	r30, r24
     aa6:	20 83       	st	Z, r18
     aa8:	04 ec       	ldi	r16, 0xC4	; 196
     aaa:	10 e0       	ldi	r17, 0x00	; 0
     aac:	89 81       	ldd	r24, Y+1	; 0x01
     aae:	9a 81       	ldd	r25, Y+2	; 0x02
     ab0:	ab 81       	ldd	r26, Y+3	; 0x03
     ab2:	bc 81       	ldd	r27, Y+4	; 0x04
     ab4:	88 0f       	add	r24, r24
     ab6:	99 1f       	adc	r25, r25
     ab8:	aa 1f       	adc	r26, r26
     aba:	bb 1f       	adc	r27, r27
     abc:	88 0f       	add	r24, r24
     abe:	99 1f       	adc	r25, r25
     ac0:	aa 1f       	adc	r26, r26
     ac2:	bb 1f       	adc	r27, r27
     ac4:	88 0f       	add	r24, r24
     ac6:	99 1f       	adc	r25, r25
     ac8:	aa 1f       	adc	r26, r26
     aca:	bb 1f       	adc	r27, r27
     acc:	88 0f       	add	r24, r24
     ace:	99 1f       	adc	r25, r25
     ad0:	aa 1f       	adc	r26, r26
     ad2:	bb 1f       	adc	r27, r27
     ad4:	9c 01       	movw	r18, r24
     ad6:	ad 01       	movw	r20, r26
     ad8:	80 e0       	ldi	r24, 0x00	; 0
     ada:	94 e2       	ldi	r25, 0x24	; 36
     adc:	a4 ef       	ldi	r26, 0xF4	; 244
     ade:	b0 e0       	ldi	r27, 0x00	; 0
     ae0:	bc 01       	movw	r22, r24
     ae2:	cd 01       	movw	r24, r26
     ae4:	0e 94 bf 07 	call	0xf7e	; 0xf7e <__udivmodsi4>
     ae8:	da 01       	movw	r26, r20
     aea:	c9 01       	movw	r24, r18
     aec:	81 50       	subi	r24, 0x01	; 1
     aee:	f8 01       	movw	r30, r16
     af0:	80 83       	st	Z, r24
     af2:	05 ec       	ldi	r16, 0xC5	; 197
     af4:	10 e0       	ldi	r17, 0x00	; 0
     af6:	89 81       	ldd	r24, Y+1	; 0x01
     af8:	9a 81       	ldd	r25, Y+2	; 0x02
     afa:	ab 81       	ldd	r26, Y+3	; 0x03
     afc:	bc 81       	ldd	r27, Y+4	; 0x04
     afe:	88 0f       	add	r24, r24
     b00:	99 1f       	adc	r25, r25
     b02:	aa 1f       	adc	r26, r26
     b04:	bb 1f       	adc	r27, r27
     b06:	88 0f       	add	r24, r24
     b08:	99 1f       	adc	r25, r25
     b0a:	aa 1f       	adc	r26, r26
     b0c:	bb 1f       	adc	r27, r27
     b0e:	88 0f       	add	r24, r24
     b10:	99 1f       	adc	r25, r25
     b12:	aa 1f       	adc	r26, r26
     b14:	bb 1f       	adc	r27, r27
     b16:	88 0f       	add	r24, r24
     b18:	99 1f       	adc	r25, r25
     b1a:	aa 1f       	adc	r26, r26
     b1c:	bb 1f       	adc	r27, r27
     b1e:	9c 01       	movw	r18, r24
     b20:	ad 01       	movw	r20, r26
     b22:	80 e0       	ldi	r24, 0x00	; 0
     b24:	94 e2       	ldi	r25, 0x24	; 36
     b26:	a4 ef       	ldi	r26, 0xF4	; 244
     b28:	b0 e0       	ldi	r27, 0x00	; 0
     b2a:	bc 01       	movw	r22, r24
     b2c:	cd 01       	movw	r24, r26
     b2e:	0e 94 bf 07 	call	0xf7e	; 0xf7e <__udivmodsi4>
     b32:	da 01       	movw	r26, r20
     b34:	c9 01       	movw	r24, r18
     b36:	01 97       	sbiw	r24, 0x01	; 1
     b38:	a1 09       	sbc	r26, r1
     b3a:	b1 09       	sbc	r27, r1
     b3c:	89 2f       	mov	r24, r25
     b3e:	9a 2f       	mov	r25, r26
     b40:	ab 2f       	mov	r26, r27
     b42:	bb 27       	eor	r27, r27
     b44:	f8 01       	movw	r30, r16
     b46:	80 83       	st	Z, r24
     b48:	00 00       	nop
     b4a:	0f 90       	pop	r0
     b4c:	0f 90       	pop	r0
     b4e:	0f 90       	pop	r0
     b50:	0f 90       	pop	r0
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	08 95       	ret

00000b5c <USART_TxChar>:

void USART_TxChar(char data)					
{
     b5c:	cf 93       	push	r28
     b5e:	df 93       	push	r29
     b60:	1f 92       	push	r1
     b62:	cd b7       	in	r28, 0x3d	; 61
     b64:	de b7       	in	r29, 0x3e	; 62
     b66:	89 83       	std	Y+1, r24	; 0x01
	
	while (!(UCSR0A & (1<<UDRE0)));				
     b68:	00 00       	nop
     b6a:	80 ec       	ldi	r24, 0xC0	; 192
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	fc 01       	movw	r30, r24
     b70:	80 81       	ld	r24, Z
     b72:	88 2f       	mov	r24, r24
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	80 72       	andi	r24, 0x20	; 32
     b78:	99 27       	eor	r25, r25
     b7a:	89 2b       	or	r24, r25
     b7c:	b1 f3       	breq	.-20     	; 0xb6a <USART_TxChar+0xe>
	UDR0 = data;								
     b7e:	86 ec       	ldi	r24, 0xC6	; 198
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	29 81       	ldd	r18, Y+1	; 0x01
     b84:	fc 01       	movw	r30, r24
     b86:	20 83       	st	Z, r18
}
     b88:	00 00       	nop
     b8a:	0f 90       	pop	r0
     b8c:	df 91       	pop	r29
     b8e:	cf 91       	pop	r28
     b90:	08 95       	ret

00000b92 <USART_SendString>:

void USART_SendString(char *str)				
{
     b92:	cf 93       	push	r28
     b94:	df 93       	push	r29
     b96:	00 d0       	rcall	.+0      	; 0xb98 <USART_SendString+0x6>
     b98:	00 d0       	rcall	.+0      	; 0xb9a <USART_SendString+0x8>
     b9a:	cd b7       	in	r28, 0x3d	; 61
     b9c:	de b7       	in	r29, 0x3e	; 62
     b9e:	9c 83       	std	Y+4, r25	; 0x04
     ba0:	8b 83       	std	Y+3, r24	; 0x03
	int i=0;									
     ba2:	1a 82       	std	Y+2, r1	; 0x02
     ba4:	19 82       	std	Y+1, r1	; 0x01
	while (str[i]!=0)
     ba6:	0f c0       	rjmp	.+30     	; 0xbc6 <USART_SendString+0x34>
	{
		USART_TxChar(str[i]);					
     ba8:	89 81       	ldd	r24, Y+1	; 0x01
     baa:	9a 81       	ldd	r25, Y+2	; 0x02
     bac:	2b 81       	ldd	r18, Y+3	; 0x03
     bae:	3c 81       	ldd	r19, Y+4	; 0x04
     bb0:	82 0f       	add	r24, r18
     bb2:	93 1f       	adc	r25, r19
     bb4:	fc 01       	movw	r30, r24
     bb6:	80 81       	ld	r24, Z
     bb8:	0e 94 ae 05 	call	0xb5c	; 0xb5c <USART_TxChar>
		i++;
     bbc:	89 81       	ldd	r24, Y+1	; 0x01
     bbe:	9a 81       	ldd	r25, Y+2	; 0x02
     bc0:	01 96       	adiw	r24, 0x01	; 1
     bc2:	9a 83       	std	Y+2, r25	; 0x02
     bc4:	89 83       	std	Y+1, r24	; 0x01
}

void USART_SendString(char *str)				
{
	int i=0;									
	while (str[i]!=0)
     bc6:	89 81       	ldd	r24, Y+1	; 0x01
     bc8:	9a 81       	ldd	r25, Y+2	; 0x02
     bca:	2b 81       	ldd	r18, Y+3	; 0x03
     bcc:	3c 81       	ldd	r19, Y+4	; 0x04
     bce:	82 0f       	add	r24, r18
     bd0:	93 1f       	adc	r25, r19
     bd2:	fc 01       	movw	r30, r24
     bd4:	80 81       	ld	r24, Z
     bd6:	88 23       	and	r24, r24
     bd8:	39 f7       	brne	.-50     	; 0xba8 <USART_SendString+0x16>
	{
		USART_TxChar(str[i]);					
		i++;
	}
}
     bda:	00 00       	nop
     bdc:	0f 90       	pop	r0
     bde:	0f 90       	pop	r0
     be0:	0f 90       	pop	r0
     be2:	0f 90       	pop	r0
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	08 95       	ret

00000bea <__cmpsf2>:
     bea:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__fp_cmp>
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__cmpsf2+0x8>
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	08 95       	ret

00000bf4 <__divsf3>:
     bf4:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__divsf3x>
     bf8:	0c 94 13 07 	jmp	0xe26	; 0xe26 <__fp_round>
     bfc:	0e 94 0c 07 	call	0xe18	; 0xe18 <__fp_pscB>
     c00:	58 f0       	brcs	.+22     	; 0xc18 <__divsf3+0x24>
     c02:	0e 94 05 07 	call	0xe0a	; 0xe0a <__fp_pscA>
     c06:	40 f0       	brcs	.+16     	; 0xc18 <__divsf3+0x24>
     c08:	29 f4       	brne	.+10     	; 0xc14 <__divsf3+0x20>
     c0a:	5f 3f       	cpi	r21, 0xFF	; 255
     c0c:	29 f0       	breq	.+10     	; 0xc18 <__divsf3+0x24>
     c0e:	0c 94 fc 06 	jmp	0xdf8	; 0xdf8 <__fp_inf>
     c12:	51 11       	cpse	r21, r1
     c14:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_szero>
     c18:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__fp_nan>

00000c1c <__divsf3x>:
     c1c:	0e 94 24 07 	call	0xe48	; 0xe48 <__fp_split3>
     c20:	68 f3       	brcs	.-38     	; 0xbfc <__divsf3+0x8>

00000c22 <__divsf3_pse>:
     c22:	99 23       	and	r25, r25
     c24:	b1 f3       	breq	.-20     	; 0xc12 <__divsf3+0x1e>
     c26:	55 23       	and	r21, r21
     c28:	91 f3       	breq	.-28     	; 0xc0e <__divsf3+0x1a>
     c2a:	95 1b       	sub	r25, r21
     c2c:	55 0b       	sbc	r21, r21
     c2e:	bb 27       	eor	r27, r27
     c30:	aa 27       	eor	r26, r26
     c32:	62 17       	cp	r22, r18
     c34:	73 07       	cpc	r23, r19
     c36:	84 07       	cpc	r24, r20
     c38:	38 f0       	brcs	.+14     	; 0xc48 <__divsf3_pse+0x26>
     c3a:	9f 5f       	subi	r25, 0xFF	; 255
     c3c:	5f 4f       	sbci	r21, 0xFF	; 255
     c3e:	22 0f       	add	r18, r18
     c40:	33 1f       	adc	r19, r19
     c42:	44 1f       	adc	r20, r20
     c44:	aa 1f       	adc	r26, r26
     c46:	a9 f3       	breq	.-22     	; 0xc32 <__divsf3_pse+0x10>
     c48:	35 d0       	rcall	.+106    	; 0xcb4 <__divsf3_pse+0x92>
     c4a:	0e 2e       	mov	r0, r30
     c4c:	3a f0       	brmi	.+14     	; 0xc5c <__divsf3_pse+0x3a>
     c4e:	e0 e8       	ldi	r30, 0x80	; 128
     c50:	32 d0       	rcall	.+100    	; 0xcb6 <__divsf3_pse+0x94>
     c52:	91 50       	subi	r25, 0x01	; 1
     c54:	50 40       	sbci	r21, 0x00	; 0
     c56:	e6 95       	lsr	r30
     c58:	00 1c       	adc	r0, r0
     c5a:	ca f7       	brpl	.-14     	; 0xc4e <__divsf3_pse+0x2c>
     c5c:	2b d0       	rcall	.+86     	; 0xcb4 <__divsf3_pse+0x92>
     c5e:	fe 2f       	mov	r31, r30
     c60:	29 d0       	rcall	.+82     	; 0xcb4 <__divsf3_pse+0x92>
     c62:	66 0f       	add	r22, r22
     c64:	77 1f       	adc	r23, r23
     c66:	88 1f       	adc	r24, r24
     c68:	bb 1f       	adc	r27, r27
     c6a:	26 17       	cp	r18, r22
     c6c:	37 07       	cpc	r19, r23
     c6e:	48 07       	cpc	r20, r24
     c70:	ab 07       	cpc	r26, r27
     c72:	b0 e8       	ldi	r27, 0x80	; 128
     c74:	09 f0       	breq	.+2      	; 0xc78 <__divsf3_pse+0x56>
     c76:	bb 0b       	sbc	r27, r27
     c78:	80 2d       	mov	r24, r0
     c7a:	bf 01       	movw	r22, r30
     c7c:	ff 27       	eor	r31, r31
     c7e:	93 58       	subi	r25, 0x83	; 131
     c80:	5f 4f       	sbci	r21, 0xFF	; 255
     c82:	3a f0       	brmi	.+14     	; 0xc92 <__divsf3_pse+0x70>
     c84:	9e 3f       	cpi	r25, 0xFE	; 254
     c86:	51 05       	cpc	r21, r1
     c88:	78 f0       	brcs	.+30     	; 0xca8 <__divsf3_pse+0x86>
     c8a:	0c 94 fc 06 	jmp	0xdf8	; 0xdf8 <__fp_inf>
     c8e:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_szero>
     c92:	5f 3f       	cpi	r21, 0xFF	; 255
     c94:	e4 f3       	brlt	.-8      	; 0xc8e <__divsf3_pse+0x6c>
     c96:	98 3e       	cpi	r25, 0xE8	; 232
     c98:	d4 f3       	brlt	.-12     	; 0xc8e <__divsf3_pse+0x6c>
     c9a:	86 95       	lsr	r24
     c9c:	77 95       	ror	r23
     c9e:	67 95       	ror	r22
     ca0:	b7 95       	ror	r27
     ca2:	f7 95       	ror	r31
     ca4:	9f 5f       	subi	r25, 0xFF	; 255
     ca6:	c9 f7       	brne	.-14     	; 0xc9a <__divsf3_pse+0x78>
     ca8:	88 0f       	add	r24, r24
     caa:	91 1d       	adc	r25, r1
     cac:	96 95       	lsr	r25
     cae:	87 95       	ror	r24
     cb0:	97 f9       	bld	r25, 7
     cb2:	08 95       	ret
     cb4:	e1 e0       	ldi	r30, 0x01	; 1
     cb6:	66 0f       	add	r22, r22
     cb8:	77 1f       	adc	r23, r23
     cba:	88 1f       	adc	r24, r24
     cbc:	bb 1f       	adc	r27, r27
     cbe:	62 17       	cp	r22, r18
     cc0:	73 07       	cpc	r23, r19
     cc2:	84 07       	cpc	r24, r20
     cc4:	ba 07       	cpc	r27, r26
     cc6:	20 f0       	brcs	.+8      	; 0xcd0 <__divsf3_pse+0xae>
     cc8:	62 1b       	sub	r22, r18
     cca:	73 0b       	sbc	r23, r19
     ccc:	84 0b       	sbc	r24, r20
     cce:	ba 0b       	sbc	r27, r26
     cd0:	ee 1f       	adc	r30, r30
     cd2:	88 f7       	brcc	.-30     	; 0xcb6 <__divsf3_pse+0x94>
     cd4:	e0 95       	com	r30
     cd6:	08 95       	ret

00000cd8 <__fixunssfsi>:
     cd8:	0e 94 2c 07 	call	0xe58	; 0xe58 <__fp_splitA>
     cdc:	88 f0       	brcs	.+34     	; 0xd00 <__fixunssfsi+0x28>
     cde:	9f 57       	subi	r25, 0x7F	; 127
     ce0:	98 f0       	brcs	.+38     	; 0xd08 <__fixunssfsi+0x30>
     ce2:	b9 2f       	mov	r27, r25
     ce4:	99 27       	eor	r25, r25
     ce6:	b7 51       	subi	r27, 0x17	; 23
     ce8:	b0 f0       	brcs	.+44     	; 0xd16 <__fixunssfsi+0x3e>
     cea:	e1 f0       	breq	.+56     	; 0xd24 <__fixunssfsi+0x4c>
     cec:	66 0f       	add	r22, r22
     cee:	77 1f       	adc	r23, r23
     cf0:	88 1f       	adc	r24, r24
     cf2:	99 1f       	adc	r25, r25
     cf4:	1a f0       	brmi	.+6      	; 0xcfc <__fixunssfsi+0x24>
     cf6:	ba 95       	dec	r27
     cf8:	c9 f7       	brne	.-14     	; 0xcec <__fixunssfsi+0x14>
     cfa:	14 c0       	rjmp	.+40     	; 0xd24 <__fixunssfsi+0x4c>
     cfc:	b1 30       	cpi	r27, 0x01	; 1
     cfe:	91 f0       	breq	.+36     	; 0xd24 <__fixunssfsi+0x4c>
     d00:	0e 94 46 07 	call	0xe8c	; 0xe8c <__fp_zero>
     d04:	b1 e0       	ldi	r27, 0x01	; 1
     d06:	08 95       	ret
     d08:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__fp_zero>
     d0c:	67 2f       	mov	r22, r23
     d0e:	78 2f       	mov	r23, r24
     d10:	88 27       	eor	r24, r24
     d12:	b8 5f       	subi	r27, 0xF8	; 248
     d14:	39 f0       	breq	.+14     	; 0xd24 <__fixunssfsi+0x4c>
     d16:	b9 3f       	cpi	r27, 0xF9	; 249
     d18:	cc f3       	brlt	.-14     	; 0xd0c <__fixunssfsi+0x34>
     d1a:	86 95       	lsr	r24
     d1c:	77 95       	ror	r23
     d1e:	67 95       	ror	r22
     d20:	b3 95       	inc	r27
     d22:	d9 f7       	brne	.-10     	; 0xd1a <__fixunssfsi+0x42>
     d24:	3e f4       	brtc	.+14     	; 0xd34 <__fixunssfsi+0x5c>
     d26:	90 95       	com	r25
     d28:	80 95       	com	r24
     d2a:	70 95       	com	r23
     d2c:	61 95       	neg	r22
     d2e:	7f 4f       	sbci	r23, 0xFF	; 255
     d30:	8f 4f       	sbci	r24, 0xFF	; 255
     d32:	9f 4f       	sbci	r25, 0xFF	; 255
     d34:	08 95       	ret

00000d36 <__floatunsisf>:
     d36:	e8 94       	clt
     d38:	09 c0       	rjmp	.+18     	; 0xd4c <__floatsisf+0x12>

00000d3a <__floatsisf>:
     d3a:	97 fb       	bst	r25, 7
     d3c:	3e f4       	brtc	.+14     	; 0xd4c <__floatsisf+0x12>
     d3e:	90 95       	com	r25
     d40:	80 95       	com	r24
     d42:	70 95       	com	r23
     d44:	61 95       	neg	r22
     d46:	7f 4f       	sbci	r23, 0xFF	; 255
     d48:	8f 4f       	sbci	r24, 0xFF	; 255
     d4a:	9f 4f       	sbci	r25, 0xFF	; 255
     d4c:	99 23       	and	r25, r25
     d4e:	a9 f0       	breq	.+42     	; 0xd7a <__floatsisf+0x40>
     d50:	f9 2f       	mov	r31, r25
     d52:	96 e9       	ldi	r25, 0x96	; 150
     d54:	bb 27       	eor	r27, r27
     d56:	93 95       	inc	r25
     d58:	f6 95       	lsr	r31
     d5a:	87 95       	ror	r24
     d5c:	77 95       	ror	r23
     d5e:	67 95       	ror	r22
     d60:	b7 95       	ror	r27
     d62:	f1 11       	cpse	r31, r1
     d64:	f8 cf       	rjmp	.-16     	; 0xd56 <__floatsisf+0x1c>
     d66:	fa f4       	brpl	.+62     	; 0xda6 <__floatsisf+0x6c>
     d68:	bb 0f       	add	r27, r27
     d6a:	11 f4       	brne	.+4      	; 0xd70 <__floatsisf+0x36>
     d6c:	60 ff       	sbrs	r22, 0
     d6e:	1b c0       	rjmp	.+54     	; 0xda6 <__floatsisf+0x6c>
     d70:	6f 5f       	subi	r22, 0xFF	; 255
     d72:	7f 4f       	sbci	r23, 0xFF	; 255
     d74:	8f 4f       	sbci	r24, 0xFF	; 255
     d76:	9f 4f       	sbci	r25, 0xFF	; 255
     d78:	16 c0       	rjmp	.+44     	; 0xda6 <__floatsisf+0x6c>
     d7a:	88 23       	and	r24, r24
     d7c:	11 f0       	breq	.+4      	; 0xd82 <__floatsisf+0x48>
     d7e:	96 e9       	ldi	r25, 0x96	; 150
     d80:	11 c0       	rjmp	.+34     	; 0xda4 <__floatsisf+0x6a>
     d82:	77 23       	and	r23, r23
     d84:	21 f0       	breq	.+8      	; 0xd8e <__floatsisf+0x54>
     d86:	9e e8       	ldi	r25, 0x8E	; 142
     d88:	87 2f       	mov	r24, r23
     d8a:	76 2f       	mov	r23, r22
     d8c:	05 c0       	rjmp	.+10     	; 0xd98 <__floatsisf+0x5e>
     d8e:	66 23       	and	r22, r22
     d90:	71 f0       	breq	.+28     	; 0xdae <__floatsisf+0x74>
     d92:	96 e8       	ldi	r25, 0x86	; 134
     d94:	86 2f       	mov	r24, r22
     d96:	70 e0       	ldi	r23, 0x00	; 0
     d98:	60 e0       	ldi	r22, 0x00	; 0
     d9a:	2a f0       	brmi	.+10     	; 0xda6 <__floatsisf+0x6c>
     d9c:	9a 95       	dec	r25
     d9e:	66 0f       	add	r22, r22
     da0:	77 1f       	adc	r23, r23
     da2:	88 1f       	adc	r24, r24
     da4:	da f7       	brpl	.-10     	; 0xd9c <__floatsisf+0x62>
     da6:	88 0f       	add	r24, r24
     da8:	96 95       	lsr	r25
     daa:	87 95       	ror	r24
     dac:	97 f9       	bld	r25, 7
     dae:	08 95       	ret

00000db0 <__fp_cmp>:
     db0:	99 0f       	add	r25, r25
     db2:	00 08       	sbc	r0, r0
     db4:	55 0f       	add	r21, r21
     db6:	aa 0b       	sbc	r26, r26
     db8:	e0 e8       	ldi	r30, 0x80	; 128
     dba:	fe ef       	ldi	r31, 0xFE	; 254
     dbc:	16 16       	cp	r1, r22
     dbe:	17 06       	cpc	r1, r23
     dc0:	e8 07       	cpc	r30, r24
     dc2:	f9 07       	cpc	r31, r25
     dc4:	c0 f0       	brcs	.+48     	; 0xdf6 <__fp_cmp+0x46>
     dc6:	12 16       	cp	r1, r18
     dc8:	13 06       	cpc	r1, r19
     dca:	e4 07       	cpc	r30, r20
     dcc:	f5 07       	cpc	r31, r21
     dce:	98 f0       	brcs	.+38     	; 0xdf6 <__fp_cmp+0x46>
     dd0:	62 1b       	sub	r22, r18
     dd2:	73 0b       	sbc	r23, r19
     dd4:	84 0b       	sbc	r24, r20
     dd6:	95 0b       	sbc	r25, r21
     dd8:	39 f4       	brne	.+14     	; 0xde8 <__fp_cmp+0x38>
     dda:	0a 26       	eor	r0, r26
     ddc:	61 f0       	breq	.+24     	; 0xdf6 <__fp_cmp+0x46>
     dde:	23 2b       	or	r18, r19
     de0:	24 2b       	or	r18, r20
     de2:	25 2b       	or	r18, r21
     de4:	21 f4       	brne	.+8      	; 0xdee <__fp_cmp+0x3e>
     de6:	08 95       	ret
     de8:	0a 26       	eor	r0, r26
     dea:	09 f4       	brne	.+2      	; 0xdee <__fp_cmp+0x3e>
     dec:	a1 40       	sbci	r26, 0x01	; 1
     dee:	a6 95       	lsr	r26
     df0:	8f ef       	ldi	r24, 0xFF	; 255
     df2:	81 1d       	adc	r24, r1
     df4:	81 1d       	adc	r24, r1
     df6:	08 95       	ret

00000df8 <__fp_inf>:
     df8:	97 f9       	bld	r25, 7
     dfa:	9f 67       	ori	r25, 0x7F	; 127
     dfc:	80 e8       	ldi	r24, 0x80	; 128
     dfe:	70 e0       	ldi	r23, 0x00	; 0
     e00:	60 e0       	ldi	r22, 0x00	; 0
     e02:	08 95       	ret

00000e04 <__fp_nan>:
     e04:	9f ef       	ldi	r25, 0xFF	; 255
     e06:	80 ec       	ldi	r24, 0xC0	; 192
     e08:	08 95       	ret

00000e0a <__fp_pscA>:
     e0a:	00 24       	eor	r0, r0
     e0c:	0a 94       	dec	r0
     e0e:	16 16       	cp	r1, r22
     e10:	17 06       	cpc	r1, r23
     e12:	18 06       	cpc	r1, r24
     e14:	09 06       	cpc	r0, r25
     e16:	08 95       	ret

00000e18 <__fp_pscB>:
     e18:	00 24       	eor	r0, r0
     e1a:	0a 94       	dec	r0
     e1c:	12 16       	cp	r1, r18
     e1e:	13 06       	cpc	r1, r19
     e20:	14 06       	cpc	r1, r20
     e22:	05 06       	cpc	r0, r21
     e24:	08 95       	ret

00000e26 <__fp_round>:
     e26:	09 2e       	mov	r0, r25
     e28:	03 94       	inc	r0
     e2a:	00 0c       	add	r0, r0
     e2c:	11 f4       	brne	.+4      	; 0xe32 <__fp_round+0xc>
     e2e:	88 23       	and	r24, r24
     e30:	52 f0       	brmi	.+20     	; 0xe46 <__fp_round+0x20>
     e32:	bb 0f       	add	r27, r27
     e34:	40 f4       	brcc	.+16     	; 0xe46 <__fp_round+0x20>
     e36:	bf 2b       	or	r27, r31
     e38:	11 f4       	brne	.+4      	; 0xe3e <__fp_round+0x18>
     e3a:	60 ff       	sbrs	r22, 0
     e3c:	04 c0       	rjmp	.+8      	; 0xe46 <__fp_round+0x20>
     e3e:	6f 5f       	subi	r22, 0xFF	; 255
     e40:	7f 4f       	sbci	r23, 0xFF	; 255
     e42:	8f 4f       	sbci	r24, 0xFF	; 255
     e44:	9f 4f       	sbci	r25, 0xFF	; 255
     e46:	08 95       	ret

00000e48 <__fp_split3>:
     e48:	57 fd       	sbrc	r21, 7
     e4a:	90 58       	subi	r25, 0x80	; 128
     e4c:	44 0f       	add	r20, r20
     e4e:	55 1f       	adc	r21, r21
     e50:	59 f0       	breq	.+22     	; 0xe68 <__fp_splitA+0x10>
     e52:	5f 3f       	cpi	r21, 0xFF	; 255
     e54:	71 f0       	breq	.+28     	; 0xe72 <__fp_splitA+0x1a>
     e56:	47 95       	ror	r20

00000e58 <__fp_splitA>:
     e58:	88 0f       	add	r24, r24
     e5a:	97 fb       	bst	r25, 7
     e5c:	99 1f       	adc	r25, r25
     e5e:	61 f0       	breq	.+24     	; 0xe78 <__fp_splitA+0x20>
     e60:	9f 3f       	cpi	r25, 0xFF	; 255
     e62:	79 f0       	breq	.+30     	; 0xe82 <__fp_splitA+0x2a>
     e64:	87 95       	ror	r24
     e66:	08 95       	ret
     e68:	12 16       	cp	r1, r18
     e6a:	13 06       	cpc	r1, r19
     e6c:	14 06       	cpc	r1, r20
     e6e:	55 1f       	adc	r21, r21
     e70:	f2 cf       	rjmp	.-28     	; 0xe56 <__fp_split3+0xe>
     e72:	46 95       	lsr	r20
     e74:	f1 df       	rcall	.-30     	; 0xe58 <__fp_splitA>
     e76:	08 c0       	rjmp	.+16     	; 0xe88 <__fp_splitA+0x30>
     e78:	16 16       	cp	r1, r22
     e7a:	17 06       	cpc	r1, r23
     e7c:	18 06       	cpc	r1, r24
     e7e:	99 1f       	adc	r25, r25
     e80:	f1 cf       	rjmp	.-30     	; 0xe64 <__fp_splitA+0xc>
     e82:	86 95       	lsr	r24
     e84:	71 05       	cpc	r23, r1
     e86:	61 05       	cpc	r22, r1
     e88:	08 94       	sec
     e8a:	08 95       	ret

00000e8c <__fp_zero>:
     e8c:	e8 94       	clt

00000e8e <__fp_szero>:
     e8e:	bb 27       	eor	r27, r27
     e90:	66 27       	eor	r22, r22
     e92:	77 27       	eor	r23, r23
     e94:	cb 01       	movw	r24, r22
     e96:	97 f9       	bld	r25, 7
     e98:	08 95       	ret

00000e9a <__gesf2>:
     e9a:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__fp_cmp>
     e9e:	08 f4       	brcc	.+2      	; 0xea2 <__gesf2+0x8>
     ea0:	8f ef       	ldi	r24, 0xFF	; 255
     ea2:	08 95       	ret

00000ea4 <__mulsf3>:
     ea4:	0e 94 65 07 	call	0xeca	; 0xeca <__mulsf3x>
     ea8:	0c 94 13 07 	jmp	0xe26	; 0xe26 <__fp_round>
     eac:	0e 94 05 07 	call	0xe0a	; 0xe0a <__fp_pscA>
     eb0:	38 f0       	brcs	.+14     	; 0xec0 <__mulsf3+0x1c>
     eb2:	0e 94 0c 07 	call	0xe18	; 0xe18 <__fp_pscB>
     eb6:	20 f0       	brcs	.+8      	; 0xec0 <__mulsf3+0x1c>
     eb8:	95 23       	and	r25, r21
     eba:	11 f0       	breq	.+4      	; 0xec0 <__mulsf3+0x1c>
     ebc:	0c 94 fc 06 	jmp	0xdf8	; 0xdf8 <__fp_inf>
     ec0:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__fp_nan>
     ec4:	11 24       	eor	r1, r1
     ec6:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_szero>

00000eca <__mulsf3x>:
     eca:	0e 94 24 07 	call	0xe48	; 0xe48 <__fp_split3>
     ece:	70 f3       	brcs	.-36     	; 0xeac <__mulsf3+0x8>

00000ed0 <__mulsf3_pse>:
     ed0:	95 9f       	mul	r25, r21
     ed2:	c1 f3       	breq	.-16     	; 0xec4 <__mulsf3+0x20>
     ed4:	95 0f       	add	r25, r21
     ed6:	50 e0       	ldi	r21, 0x00	; 0
     ed8:	55 1f       	adc	r21, r21
     eda:	62 9f       	mul	r22, r18
     edc:	f0 01       	movw	r30, r0
     ede:	72 9f       	mul	r23, r18
     ee0:	bb 27       	eor	r27, r27
     ee2:	f0 0d       	add	r31, r0
     ee4:	b1 1d       	adc	r27, r1
     ee6:	63 9f       	mul	r22, r19
     ee8:	aa 27       	eor	r26, r26
     eea:	f0 0d       	add	r31, r0
     eec:	b1 1d       	adc	r27, r1
     eee:	aa 1f       	adc	r26, r26
     ef0:	64 9f       	mul	r22, r20
     ef2:	66 27       	eor	r22, r22
     ef4:	b0 0d       	add	r27, r0
     ef6:	a1 1d       	adc	r26, r1
     ef8:	66 1f       	adc	r22, r22
     efa:	82 9f       	mul	r24, r18
     efc:	22 27       	eor	r18, r18
     efe:	b0 0d       	add	r27, r0
     f00:	a1 1d       	adc	r26, r1
     f02:	62 1f       	adc	r22, r18
     f04:	73 9f       	mul	r23, r19
     f06:	b0 0d       	add	r27, r0
     f08:	a1 1d       	adc	r26, r1
     f0a:	62 1f       	adc	r22, r18
     f0c:	83 9f       	mul	r24, r19
     f0e:	a0 0d       	add	r26, r0
     f10:	61 1d       	adc	r22, r1
     f12:	22 1f       	adc	r18, r18
     f14:	74 9f       	mul	r23, r20
     f16:	33 27       	eor	r19, r19
     f18:	a0 0d       	add	r26, r0
     f1a:	61 1d       	adc	r22, r1
     f1c:	23 1f       	adc	r18, r19
     f1e:	84 9f       	mul	r24, r20
     f20:	60 0d       	add	r22, r0
     f22:	21 1d       	adc	r18, r1
     f24:	82 2f       	mov	r24, r18
     f26:	76 2f       	mov	r23, r22
     f28:	6a 2f       	mov	r22, r26
     f2a:	11 24       	eor	r1, r1
     f2c:	9f 57       	subi	r25, 0x7F	; 127
     f2e:	50 40       	sbci	r21, 0x00	; 0
     f30:	9a f0       	brmi	.+38     	; 0xf58 <__mulsf3_pse+0x88>
     f32:	f1 f0       	breq	.+60     	; 0xf70 <__mulsf3_pse+0xa0>
     f34:	88 23       	and	r24, r24
     f36:	4a f0       	brmi	.+18     	; 0xf4a <__mulsf3_pse+0x7a>
     f38:	ee 0f       	add	r30, r30
     f3a:	ff 1f       	adc	r31, r31
     f3c:	bb 1f       	adc	r27, r27
     f3e:	66 1f       	adc	r22, r22
     f40:	77 1f       	adc	r23, r23
     f42:	88 1f       	adc	r24, r24
     f44:	91 50       	subi	r25, 0x01	; 1
     f46:	50 40       	sbci	r21, 0x00	; 0
     f48:	a9 f7       	brne	.-22     	; 0xf34 <__mulsf3_pse+0x64>
     f4a:	9e 3f       	cpi	r25, 0xFE	; 254
     f4c:	51 05       	cpc	r21, r1
     f4e:	80 f0       	brcs	.+32     	; 0xf70 <__mulsf3_pse+0xa0>
     f50:	0c 94 fc 06 	jmp	0xdf8	; 0xdf8 <__fp_inf>
     f54:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_szero>
     f58:	5f 3f       	cpi	r21, 0xFF	; 255
     f5a:	e4 f3       	brlt	.-8      	; 0xf54 <__mulsf3_pse+0x84>
     f5c:	98 3e       	cpi	r25, 0xE8	; 232
     f5e:	d4 f3       	brlt	.-12     	; 0xf54 <__mulsf3_pse+0x84>
     f60:	86 95       	lsr	r24
     f62:	77 95       	ror	r23
     f64:	67 95       	ror	r22
     f66:	b7 95       	ror	r27
     f68:	f7 95       	ror	r31
     f6a:	e7 95       	ror	r30
     f6c:	9f 5f       	subi	r25, 0xFF	; 255
     f6e:	c1 f7       	brne	.-16     	; 0xf60 <__mulsf3_pse+0x90>
     f70:	fe 2b       	or	r31, r30
     f72:	88 0f       	add	r24, r24
     f74:	91 1d       	adc	r25, r1
     f76:	96 95       	lsr	r25
     f78:	87 95       	ror	r24
     f7a:	97 f9       	bld	r25, 7
     f7c:	08 95       	ret

00000f7e <__udivmodsi4>:
     f7e:	a1 e2       	ldi	r26, 0x21	; 33
     f80:	1a 2e       	mov	r1, r26
     f82:	aa 1b       	sub	r26, r26
     f84:	bb 1b       	sub	r27, r27
     f86:	fd 01       	movw	r30, r26
     f88:	0d c0       	rjmp	.+26     	; 0xfa4 <__udivmodsi4_ep>

00000f8a <__udivmodsi4_loop>:
     f8a:	aa 1f       	adc	r26, r26
     f8c:	bb 1f       	adc	r27, r27
     f8e:	ee 1f       	adc	r30, r30
     f90:	ff 1f       	adc	r31, r31
     f92:	a2 17       	cp	r26, r18
     f94:	b3 07       	cpc	r27, r19
     f96:	e4 07       	cpc	r30, r20
     f98:	f5 07       	cpc	r31, r21
     f9a:	20 f0       	brcs	.+8      	; 0xfa4 <__udivmodsi4_ep>
     f9c:	a2 1b       	sub	r26, r18
     f9e:	b3 0b       	sbc	r27, r19
     fa0:	e4 0b       	sbc	r30, r20
     fa2:	f5 0b       	sbc	r31, r21

00000fa4 <__udivmodsi4_ep>:
     fa4:	66 1f       	adc	r22, r22
     fa6:	77 1f       	adc	r23, r23
     fa8:	88 1f       	adc	r24, r24
     faa:	99 1f       	adc	r25, r25
     fac:	1a 94       	dec	r1
     fae:	69 f7       	brne	.-38     	; 0xf8a <__udivmodsi4_loop>
     fb0:	60 95       	com	r22
     fb2:	70 95       	com	r23
     fb4:	80 95       	com	r24
     fb6:	90 95       	com	r25
     fb8:	9b 01       	movw	r18, r22
     fba:	ac 01       	movw	r20, r24
     fbc:	bd 01       	movw	r22, r26
     fbe:	cf 01       	movw	r24, r30
     fc0:	08 95       	ret

00000fc2 <dtostrf>:
     fc2:	ef 92       	push	r14
     fc4:	0f 93       	push	r16
     fc6:	1f 93       	push	r17
     fc8:	cf 93       	push	r28
     fca:	df 93       	push	r29
     fcc:	e8 01       	movw	r28, r16
     fce:	47 fd       	sbrc	r20, 7
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <dtostrf+0x14>
     fd2:	34 e0       	ldi	r19, 0x04	; 4
     fd4:	01 c0       	rjmp	.+2      	; 0xfd8 <dtostrf+0x16>
     fd6:	34 e1       	ldi	r19, 0x14	; 20
     fd8:	04 2e       	mov	r0, r20
     fda:	00 0c       	add	r0, r0
     fdc:	55 0b       	sbc	r21, r21
     fde:	57 ff       	sbrs	r21, 7
     fe0:	03 c0       	rjmp	.+6      	; 0xfe8 <dtostrf+0x26>
     fe2:	51 95       	neg	r21
     fe4:	41 95       	neg	r20
     fe6:	51 09       	sbc	r21, r1
     fe8:	e3 2e       	mov	r14, r19
     fea:	02 2f       	mov	r16, r18
     fec:	24 2f       	mov	r18, r20
     fee:	ae 01       	movw	r20, r28
     ff0:	0e 94 12 0a 	call	0x1424	; 0x1424 <dtoa_prf>
     ff4:	ce 01       	movw	r24, r28
     ff6:	df 91       	pop	r29
     ff8:	cf 91       	pop	r28
     ffa:	1f 91       	pop	r17
     ffc:	0f 91       	pop	r16
     ffe:	ef 90       	pop	r14
    1000:	08 95       	ret

00001002 <snprintf>:
    1002:	ae e0       	ldi	r26, 0x0E	; 14
    1004:	b0 e0       	ldi	r27, 0x00	; 0
    1006:	e7 e0       	ldi	r30, 0x07	; 7
    1008:	f8 e0       	ldi	r31, 0x08	; 8
    100a:	0c 94 02 0d 	jmp	0x1a04	; 0x1a04 <__prologue_saves__+0x1c>
    100e:	0d 89       	ldd	r16, Y+21	; 0x15
    1010:	1e 89       	ldd	r17, Y+22	; 0x16
    1012:	8f 89       	ldd	r24, Y+23	; 0x17
    1014:	98 8d       	ldd	r25, Y+24	; 0x18
    1016:	26 e0       	ldi	r18, 0x06	; 6
    1018:	2c 83       	std	Y+4, r18	; 0x04
    101a:	1a 83       	std	Y+2, r17	; 0x02
    101c:	09 83       	std	Y+1, r16	; 0x01
    101e:	97 ff       	sbrs	r25, 7
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <snprintf+0x24>
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	90 e8       	ldi	r25, 0x80	; 128
    1026:	01 97       	sbiw	r24, 0x01	; 1
    1028:	9e 83       	std	Y+6, r25	; 0x06
    102a:	8d 83       	std	Y+5, r24	; 0x05
    102c:	ae 01       	movw	r20, r28
    102e:	45 5e       	subi	r20, 0xE5	; 229
    1030:	5f 4f       	sbci	r21, 0xFF	; 255
    1032:	69 8d       	ldd	r22, Y+25	; 0x19
    1034:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1036:	ce 01       	movw	r24, r28
    1038:	01 96       	adiw	r24, 0x01	; 1
    103a:	0e 94 31 08 	call	0x1062	; 0x1062 <vfprintf>
    103e:	4d 81       	ldd	r20, Y+5	; 0x05
    1040:	5e 81       	ldd	r21, Y+6	; 0x06
    1042:	57 fd       	sbrc	r21, 7
    1044:	0a c0       	rjmp	.+20     	; 0x105a <snprintf+0x58>
    1046:	2f 81       	ldd	r18, Y+7	; 0x07
    1048:	38 85       	ldd	r19, Y+8	; 0x08
    104a:	42 17       	cp	r20, r18
    104c:	53 07       	cpc	r21, r19
    104e:	0c f4       	brge	.+2      	; 0x1052 <snprintf+0x50>
    1050:	9a 01       	movw	r18, r20
    1052:	f8 01       	movw	r30, r16
    1054:	e2 0f       	add	r30, r18
    1056:	f3 1f       	adc	r31, r19
    1058:	10 82       	st	Z, r1
    105a:	2e 96       	adiw	r28, 0x0e	; 14
    105c:	e4 e0       	ldi	r30, 0x04	; 4
    105e:	0c 94 1e 0d 	jmp	0x1a3c	; 0x1a3c <__epilogue_restores__+0x1c>

00001062 <vfprintf>:
    1062:	ab e0       	ldi	r26, 0x0B	; 11
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e7 e3       	ldi	r30, 0x37	; 55
    1068:	f8 e0       	ldi	r31, 0x08	; 8
    106a:	0c 94 f4 0c 	jmp	0x19e8	; 0x19e8 <__prologue_saves__>
    106e:	6c 01       	movw	r12, r24
    1070:	7b 01       	movw	r14, r22
    1072:	8a 01       	movw	r16, r20
    1074:	fc 01       	movw	r30, r24
    1076:	17 82       	std	Z+7, r1	; 0x07
    1078:	16 82       	std	Z+6, r1	; 0x06
    107a:	83 81       	ldd	r24, Z+3	; 0x03
    107c:	81 ff       	sbrs	r24, 1
    107e:	cc c1       	rjmp	.+920    	; 0x1418 <vfprintf+0x3b6>
    1080:	ce 01       	movw	r24, r28
    1082:	01 96       	adiw	r24, 0x01	; 1
    1084:	3c 01       	movw	r6, r24
    1086:	f6 01       	movw	r30, r12
    1088:	93 81       	ldd	r25, Z+3	; 0x03
    108a:	f7 01       	movw	r30, r14
    108c:	93 fd       	sbrc	r25, 3
    108e:	85 91       	lpm	r24, Z+
    1090:	93 ff       	sbrs	r25, 3
    1092:	81 91       	ld	r24, Z+
    1094:	7f 01       	movw	r14, r30
    1096:	88 23       	and	r24, r24
    1098:	09 f4       	brne	.+2      	; 0x109c <vfprintf+0x3a>
    109a:	ba c1       	rjmp	.+884    	; 0x1410 <vfprintf+0x3ae>
    109c:	85 32       	cpi	r24, 0x25	; 37
    109e:	39 f4       	brne	.+14     	; 0x10ae <vfprintf+0x4c>
    10a0:	93 fd       	sbrc	r25, 3
    10a2:	85 91       	lpm	r24, Z+
    10a4:	93 ff       	sbrs	r25, 3
    10a6:	81 91       	ld	r24, Z+
    10a8:	7f 01       	movw	r14, r30
    10aa:	85 32       	cpi	r24, 0x25	; 37
    10ac:	29 f4       	brne	.+10     	; 0x10b8 <vfprintf+0x56>
    10ae:	b6 01       	movw	r22, r12
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
    10b6:	e7 cf       	rjmp	.-50     	; 0x1086 <vfprintf+0x24>
    10b8:	91 2c       	mov	r9, r1
    10ba:	21 2c       	mov	r2, r1
    10bc:	31 2c       	mov	r3, r1
    10be:	ff e1       	ldi	r31, 0x1F	; 31
    10c0:	f3 15       	cp	r31, r3
    10c2:	d8 f0       	brcs	.+54     	; 0x10fa <vfprintf+0x98>
    10c4:	8b 32       	cpi	r24, 0x2B	; 43
    10c6:	79 f0       	breq	.+30     	; 0x10e6 <vfprintf+0x84>
    10c8:	38 f4       	brcc	.+14     	; 0x10d8 <vfprintf+0x76>
    10ca:	80 32       	cpi	r24, 0x20	; 32
    10cc:	79 f0       	breq	.+30     	; 0x10ec <vfprintf+0x8a>
    10ce:	83 32       	cpi	r24, 0x23	; 35
    10d0:	a1 f4       	brne	.+40     	; 0x10fa <vfprintf+0x98>
    10d2:	23 2d       	mov	r18, r3
    10d4:	20 61       	ori	r18, 0x10	; 16
    10d6:	1d c0       	rjmp	.+58     	; 0x1112 <vfprintf+0xb0>
    10d8:	8d 32       	cpi	r24, 0x2D	; 45
    10da:	61 f0       	breq	.+24     	; 0x10f4 <vfprintf+0x92>
    10dc:	80 33       	cpi	r24, 0x30	; 48
    10de:	69 f4       	brne	.+26     	; 0x10fa <vfprintf+0x98>
    10e0:	23 2d       	mov	r18, r3
    10e2:	21 60       	ori	r18, 0x01	; 1
    10e4:	16 c0       	rjmp	.+44     	; 0x1112 <vfprintf+0xb0>
    10e6:	83 2d       	mov	r24, r3
    10e8:	82 60       	ori	r24, 0x02	; 2
    10ea:	38 2e       	mov	r3, r24
    10ec:	e3 2d       	mov	r30, r3
    10ee:	e4 60       	ori	r30, 0x04	; 4
    10f0:	3e 2e       	mov	r3, r30
    10f2:	2a c0       	rjmp	.+84     	; 0x1148 <vfprintf+0xe6>
    10f4:	f3 2d       	mov	r31, r3
    10f6:	f8 60       	ori	r31, 0x08	; 8
    10f8:	1d c0       	rjmp	.+58     	; 0x1134 <vfprintf+0xd2>
    10fa:	37 fc       	sbrc	r3, 7
    10fc:	2d c0       	rjmp	.+90     	; 0x1158 <vfprintf+0xf6>
    10fe:	20 ed       	ldi	r18, 0xD0	; 208
    1100:	28 0f       	add	r18, r24
    1102:	2a 30       	cpi	r18, 0x0A	; 10
    1104:	40 f0       	brcs	.+16     	; 0x1116 <vfprintf+0xb4>
    1106:	8e 32       	cpi	r24, 0x2E	; 46
    1108:	b9 f4       	brne	.+46     	; 0x1138 <vfprintf+0xd6>
    110a:	36 fc       	sbrc	r3, 6
    110c:	81 c1       	rjmp	.+770    	; 0x1410 <vfprintf+0x3ae>
    110e:	23 2d       	mov	r18, r3
    1110:	20 64       	ori	r18, 0x40	; 64
    1112:	32 2e       	mov	r3, r18
    1114:	19 c0       	rjmp	.+50     	; 0x1148 <vfprintf+0xe6>
    1116:	36 fe       	sbrs	r3, 6
    1118:	06 c0       	rjmp	.+12     	; 0x1126 <vfprintf+0xc4>
    111a:	8a e0       	ldi	r24, 0x0A	; 10
    111c:	98 9e       	mul	r9, r24
    111e:	20 0d       	add	r18, r0
    1120:	11 24       	eor	r1, r1
    1122:	92 2e       	mov	r9, r18
    1124:	11 c0       	rjmp	.+34     	; 0x1148 <vfprintf+0xe6>
    1126:	ea e0       	ldi	r30, 0x0A	; 10
    1128:	2e 9e       	mul	r2, r30
    112a:	20 0d       	add	r18, r0
    112c:	11 24       	eor	r1, r1
    112e:	22 2e       	mov	r2, r18
    1130:	f3 2d       	mov	r31, r3
    1132:	f0 62       	ori	r31, 0x20	; 32
    1134:	3f 2e       	mov	r3, r31
    1136:	08 c0       	rjmp	.+16     	; 0x1148 <vfprintf+0xe6>
    1138:	8c 36       	cpi	r24, 0x6C	; 108
    113a:	21 f4       	brne	.+8      	; 0x1144 <vfprintf+0xe2>
    113c:	83 2d       	mov	r24, r3
    113e:	80 68       	ori	r24, 0x80	; 128
    1140:	38 2e       	mov	r3, r24
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <vfprintf+0xe6>
    1144:	88 36       	cpi	r24, 0x68	; 104
    1146:	41 f4       	brne	.+16     	; 0x1158 <vfprintf+0xf6>
    1148:	f7 01       	movw	r30, r14
    114a:	93 fd       	sbrc	r25, 3
    114c:	85 91       	lpm	r24, Z+
    114e:	93 ff       	sbrs	r25, 3
    1150:	81 91       	ld	r24, Z+
    1152:	7f 01       	movw	r14, r30
    1154:	81 11       	cpse	r24, r1
    1156:	b3 cf       	rjmp	.-154    	; 0x10be <vfprintf+0x5c>
    1158:	98 2f       	mov	r25, r24
    115a:	9f 7d       	andi	r25, 0xDF	; 223
    115c:	95 54       	subi	r25, 0x45	; 69
    115e:	93 30       	cpi	r25, 0x03	; 3
    1160:	28 f4       	brcc	.+10     	; 0x116c <vfprintf+0x10a>
    1162:	0c 5f       	subi	r16, 0xFC	; 252
    1164:	1f 4f       	sbci	r17, 0xFF	; 255
    1166:	9f e3       	ldi	r25, 0x3F	; 63
    1168:	99 83       	std	Y+1, r25	; 0x01
    116a:	0d c0       	rjmp	.+26     	; 0x1186 <vfprintf+0x124>
    116c:	83 36       	cpi	r24, 0x63	; 99
    116e:	31 f0       	breq	.+12     	; 0x117c <vfprintf+0x11a>
    1170:	83 37       	cpi	r24, 0x73	; 115
    1172:	71 f0       	breq	.+28     	; 0x1190 <vfprintf+0x12e>
    1174:	83 35       	cpi	r24, 0x53	; 83
    1176:	09 f0       	breq	.+2      	; 0x117a <vfprintf+0x118>
    1178:	59 c0       	rjmp	.+178    	; 0x122c <vfprintf+0x1ca>
    117a:	21 c0       	rjmp	.+66     	; 0x11be <vfprintf+0x15c>
    117c:	f8 01       	movw	r30, r16
    117e:	80 81       	ld	r24, Z
    1180:	89 83       	std	Y+1, r24	; 0x01
    1182:	0e 5f       	subi	r16, 0xFE	; 254
    1184:	1f 4f       	sbci	r17, 0xFF	; 255
    1186:	88 24       	eor	r8, r8
    1188:	83 94       	inc	r8
    118a:	91 2c       	mov	r9, r1
    118c:	53 01       	movw	r10, r6
    118e:	13 c0       	rjmp	.+38     	; 0x11b6 <vfprintf+0x154>
    1190:	28 01       	movw	r4, r16
    1192:	f2 e0       	ldi	r31, 0x02	; 2
    1194:	4f 0e       	add	r4, r31
    1196:	51 1c       	adc	r5, r1
    1198:	f8 01       	movw	r30, r16
    119a:	a0 80       	ld	r10, Z
    119c:	b1 80       	ldd	r11, Z+1	; 0x01
    119e:	36 fe       	sbrs	r3, 6
    11a0:	03 c0       	rjmp	.+6      	; 0x11a8 <vfprintf+0x146>
    11a2:	69 2d       	mov	r22, r9
    11a4:	70 e0       	ldi	r23, 0x00	; 0
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <vfprintf+0x14a>
    11a8:	6f ef       	ldi	r22, 0xFF	; 255
    11aa:	7f ef       	ldi	r23, 0xFF	; 255
    11ac:	c5 01       	movw	r24, r10
    11ae:	0e 94 4f 0c 	call	0x189e	; 0x189e <strnlen>
    11b2:	4c 01       	movw	r8, r24
    11b4:	82 01       	movw	r16, r4
    11b6:	f3 2d       	mov	r31, r3
    11b8:	ff 77       	andi	r31, 0x7F	; 127
    11ba:	3f 2e       	mov	r3, r31
    11bc:	16 c0       	rjmp	.+44     	; 0x11ea <vfprintf+0x188>
    11be:	28 01       	movw	r4, r16
    11c0:	22 e0       	ldi	r18, 0x02	; 2
    11c2:	42 0e       	add	r4, r18
    11c4:	51 1c       	adc	r5, r1
    11c6:	f8 01       	movw	r30, r16
    11c8:	a0 80       	ld	r10, Z
    11ca:	b1 80       	ldd	r11, Z+1	; 0x01
    11cc:	36 fe       	sbrs	r3, 6
    11ce:	03 c0       	rjmp	.+6      	; 0x11d6 <vfprintf+0x174>
    11d0:	69 2d       	mov	r22, r9
    11d2:	70 e0       	ldi	r23, 0x00	; 0
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <vfprintf+0x178>
    11d6:	6f ef       	ldi	r22, 0xFF	; 255
    11d8:	7f ef       	ldi	r23, 0xFF	; 255
    11da:	c5 01       	movw	r24, r10
    11dc:	0e 94 44 0c 	call	0x1888	; 0x1888 <strnlen_P>
    11e0:	4c 01       	movw	r8, r24
    11e2:	f3 2d       	mov	r31, r3
    11e4:	f0 68       	ori	r31, 0x80	; 128
    11e6:	3f 2e       	mov	r3, r31
    11e8:	82 01       	movw	r16, r4
    11ea:	33 fc       	sbrc	r3, 3
    11ec:	1b c0       	rjmp	.+54     	; 0x1224 <vfprintf+0x1c2>
    11ee:	82 2d       	mov	r24, r2
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	88 16       	cp	r8, r24
    11f4:	99 06       	cpc	r9, r25
    11f6:	b0 f4       	brcc	.+44     	; 0x1224 <vfprintf+0x1c2>
    11f8:	b6 01       	movw	r22, r12
    11fa:	80 e2       	ldi	r24, 0x20	; 32
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
    1202:	2a 94       	dec	r2
    1204:	f4 cf       	rjmp	.-24     	; 0x11ee <vfprintf+0x18c>
    1206:	f5 01       	movw	r30, r10
    1208:	37 fc       	sbrc	r3, 7
    120a:	85 91       	lpm	r24, Z+
    120c:	37 fe       	sbrs	r3, 7
    120e:	81 91       	ld	r24, Z+
    1210:	5f 01       	movw	r10, r30
    1212:	b6 01       	movw	r22, r12
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
    121a:	21 10       	cpse	r2, r1
    121c:	2a 94       	dec	r2
    121e:	21 e0       	ldi	r18, 0x01	; 1
    1220:	82 1a       	sub	r8, r18
    1222:	91 08       	sbc	r9, r1
    1224:	81 14       	cp	r8, r1
    1226:	91 04       	cpc	r9, r1
    1228:	71 f7       	brne	.-36     	; 0x1206 <vfprintf+0x1a4>
    122a:	e8 c0       	rjmp	.+464    	; 0x13fc <vfprintf+0x39a>
    122c:	84 36       	cpi	r24, 0x64	; 100
    122e:	11 f0       	breq	.+4      	; 0x1234 <vfprintf+0x1d2>
    1230:	89 36       	cpi	r24, 0x69	; 105
    1232:	41 f5       	brne	.+80     	; 0x1284 <vfprintf+0x222>
    1234:	f8 01       	movw	r30, r16
    1236:	37 fe       	sbrs	r3, 7
    1238:	07 c0       	rjmp	.+14     	; 0x1248 <vfprintf+0x1e6>
    123a:	60 81       	ld	r22, Z
    123c:	71 81       	ldd	r23, Z+1	; 0x01
    123e:	82 81       	ldd	r24, Z+2	; 0x02
    1240:	93 81       	ldd	r25, Z+3	; 0x03
    1242:	0c 5f       	subi	r16, 0xFC	; 252
    1244:	1f 4f       	sbci	r17, 0xFF	; 255
    1246:	08 c0       	rjmp	.+16     	; 0x1258 <vfprintf+0x1f6>
    1248:	60 81       	ld	r22, Z
    124a:	71 81       	ldd	r23, Z+1	; 0x01
    124c:	07 2e       	mov	r0, r23
    124e:	00 0c       	add	r0, r0
    1250:	88 0b       	sbc	r24, r24
    1252:	99 0b       	sbc	r25, r25
    1254:	0e 5f       	subi	r16, 0xFE	; 254
    1256:	1f 4f       	sbci	r17, 0xFF	; 255
    1258:	f3 2d       	mov	r31, r3
    125a:	ff 76       	andi	r31, 0x6F	; 111
    125c:	3f 2e       	mov	r3, r31
    125e:	97 ff       	sbrs	r25, 7
    1260:	09 c0       	rjmp	.+18     	; 0x1274 <vfprintf+0x212>
    1262:	90 95       	com	r25
    1264:	80 95       	com	r24
    1266:	70 95       	com	r23
    1268:	61 95       	neg	r22
    126a:	7f 4f       	sbci	r23, 0xFF	; 255
    126c:	8f 4f       	sbci	r24, 0xFF	; 255
    126e:	9f 4f       	sbci	r25, 0xFF	; 255
    1270:	f0 68       	ori	r31, 0x80	; 128
    1272:	3f 2e       	mov	r3, r31
    1274:	2a e0       	ldi	r18, 0x0A	; 10
    1276:	30 e0       	ldi	r19, 0x00	; 0
    1278:	a3 01       	movw	r20, r6
    127a:	0e 94 96 0c 	call	0x192c	; 0x192c <__ultoa_invert>
    127e:	88 2e       	mov	r8, r24
    1280:	86 18       	sub	r8, r6
    1282:	45 c0       	rjmp	.+138    	; 0x130e <vfprintf+0x2ac>
    1284:	85 37       	cpi	r24, 0x75	; 117
    1286:	31 f4       	brne	.+12     	; 0x1294 <vfprintf+0x232>
    1288:	23 2d       	mov	r18, r3
    128a:	2f 7e       	andi	r18, 0xEF	; 239
    128c:	b2 2e       	mov	r11, r18
    128e:	2a e0       	ldi	r18, 0x0A	; 10
    1290:	30 e0       	ldi	r19, 0x00	; 0
    1292:	25 c0       	rjmp	.+74     	; 0x12de <vfprintf+0x27c>
    1294:	93 2d       	mov	r25, r3
    1296:	99 7f       	andi	r25, 0xF9	; 249
    1298:	b9 2e       	mov	r11, r25
    129a:	8f 36       	cpi	r24, 0x6F	; 111
    129c:	c1 f0       	breq	.+48     	; 0x12ce <vfprintf+0x26c>
    129e:	18 f4       	brcc	.+6      	; 0x12a6 <vfprintf+0x244>
    12a0:	88 35       	cpi	r24, 0x58	; 88
    12a2:	79 f0       	breq	.+30     	; 0x12c2 <vfprintf+0x260>
    12a4:	b5 c0       	rjmp	.+362    	; 0x1410 <vfprintf+0x3ae>
    12a6:	80 37       	cpi	r24, 0x70	; 112
    12a8:	19 f0       	breq	.+6      	; 0x12b0 <vfprintf+0x24e>
    12aa:	88 37       	cpi	r24, 0x78	; 120
    12ac:	21 f0       	breq	.+8      	; 0x12b6 <vfprintf+0x254>
    12ae:	b0 c0       	rjmp	.+352    	; 0x1410 <vfprintf+0x3ae>
    12b0:	e9 2f       	mov	r30, r25
    12b2:	e0 61       	ori	r30, 0x10	; 16
    12b4:	be 2e       	mov	r11, r30
    12b6:	b4 fe       	sbrs	r11, 4
    12b8:	0d c0       	rjmp	.+26     	; 0x12d4 <vfprintf+0x272>
    12ba:	fb 2d       	mov	r31, r11
    12bc:	f4 60       	ori	r31, 0x04	; 4
    12be:	bf 2e       	mov	r11, r31
    12c0:	09 c0       	rjmp	.+18     	; 0x12d4 <vfprintf+0x272>
    12c2:	34 fe       	sbrs	r3, 4
    12c4:	0a c0       	rjmp	.+20     	; 0x12da <vfprintf+0x278>
    12c6:	29 2f       	mov	r18, r25
    12c8:	26 60       	ori	r18, 0x06	; 6
    12ca:	b2 2e       	mov	r11, r18
    12cc:	06 c0       	rjmp	.+12     	; 0x12da <vfprintf+0x278>
    12ce:	28 e0       	ldi	r18, 0x08	; 8
    12d0:	30 e0       	ldi	r19, 0x00	; 0
    12d2:	05 c0       	rjmp	.+10     	; 0x12de <vfprintf+0x27c>
    12d4:	20 e1       	ldi	r18, 0x10	; 16
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	02 c0       	rjmp	.+4      	; 0x12de <vfprintf+0x27c>
    12da:	20 e1       	ldi	r18, 0x10	; 16
    12dc:	32 e0       	ldi	r19, 0x02	; 2
    12de:	f8 01       	movw	r30, r16
    12e0:	b7 fe       	sbrs	r11, 7
    12e2:	07 c0       	rjmp	.+14     	; 0x12f2 <vfprintf+0x290>
    12e4:	60 81       	ld	r22, Z
    12e6:	71 81       	ldd	r23, Z+1	; 0x01
    12e8:	82 81       	ldd	r24, Z+2	; 0x02
    12ea:	93 81       	ldd	r25, Z+3	; 0x03
    12ec:	0c 5f       	subi	r16, 0xFC	; 252
    12ee:	1f 4f       	sbci	r17, 0xFF	; 255
    12f0:	06 c0       	rjmp	.+12     	; 0x12fe <vfprintf+0x29c>
    12f2:	60 81       	ld	r22, Z
    12f4:	71 81       	ldd	r23, Z+1	; 0x01
    12f6:	80 e0       	ldi	r24, 0x00	; 0
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	0e 5f       	subi	r16, 0xFE	; 254
    12fc:	1f 4f       	sbci	r17, 0xFF	; 255
    12fe:	a3 01       	movw	r20, r6
    1300:	0e 94 96 0c 	call	0x192c	; 0x192c <__ultoa_invert>
    1304:	88 2e       	mov	r8, r24
    1306:	86 18       	sub	r8, r6
    1308:	fb 2d       	mov	r31, r11
    130a:	ff 77       	andi	r31, 0x7F	; 127
    130c:	3f 2e       	mov	r3, r31
    130e:	36 fe       	sbrs	r3, 6
    1310:	0d c0       	rjmp	.+26     	; 0x132c <vfprintf+0x2ca>
    1312:	23 2d       	mov	r18, r3
    1314:	2e 7f       	andi	r18, 0xFE	; 254
    1316:	a2 2e       	mov	r10, r18
    1318:	89 14       	cp	r8, r9
    131a:	58 f4       	brcc	.+22     	; 0x1332 <vfprintf+0x2d0>
    131c:	34 fe       	sbrs	r3, 4
    131e:	0b c0       	rjmp	.+22     	; 0x1336 <vfprintf+0x2d4>
    1320:	32 fc       	sbrc	r3, 2
    1322:	09 c0       	rjmp	.+18     	; 0x1336 <vfprintf+0x2d4>
    1324:	83 2d       	mov	r24, r3
    1326:	8e 7e       	andi	r24, 0xEE	; 238
    1328:	a8 2e       	mov	r10, r24
    132a:	05 c0       	rjmp	.+10     	; 0x1336 <vfprintf+0x2d4>
    132c:	b8 2c       	mov	r11, r8
    132e:	a3 2c       	mov	r10, r3
    1330:	03 c0       	rjmp	.+6      	; 0x1338 <vfprintf+0x2d6>
    1332:	b8 2c       	mov	r11, r8
    1334:	01 c0       	rjmp	.+2      	; 0x1338 <vfprintf+0x2d6>
    1336:	b9 2c       	mov	r11, r9
    1338:	a4 fe       	sbrs	r10, 4
    133a:	0f c0       	rjmp	.+30     	; 0x135a <vfprintf+0x2f8>
    133c:	fe 01       	movw	r30, r28
    133e:	e8 0d       	add	r30, r8
    1340:	f1 1d       	adc	r31, r1
    1342:	80 81       	ld	r24, Z
    1344:	80 33       	cpi	r24, 0x30	; 48
    1346:	21 f4       	brne	.+8      	; 0x1350 <vfprintf+0x2ee>
    1348:	9a 2d       	mov	r25, r10
    134a:	99 7e       	andi	r25, 0xE9	; 233
    134c:	a9 2e       	mov	r10, r25
    134e:	09 c0       	rjmp	.+18     	; 0x1362 <vfprintf+0x300>
    1350:	a2 fe       	sbrs	r10, 2
    1352:	06 c0       	rjmp	.+12     	; 0x1360 <vfprintf+0x2fe>
    1354:	b3 94       	inc	r11
    1356:	b3 94       	inc	r11
    1358:	04 c0       	rjmp	.+8      	; 0x1362 <vfprintf+0x300>
    135a:	8a 2d       	mov	r24, r10
    135c:	86 78       	andi	r24, 0x86	; 134
    135e:	09 f0       	breq	.+2      	; 0x1362 <vfprintf+0x300>
    1360:	b3 94       	inc	r11
    1362:	a3 fc       	sbrc	r10, 3
    1364:	11 c0       	rjmp	.+34     	; 0x1388 <vfprintf+0x326>
    1366:	a0 fe       	sbrs	r10, 0
    1368:	06 c0       	rjmp	.+12     	; 0x1376 <vfprintf+0x314>
    136a:	b2 14       	cp	r11, r2
    136c:	88 f4       	brcc	.+34     	; 0x1390 <vfprintf+0x32e>
    136e:	28 0c       	add	r2, r8
    1370:	92 2c       	mov	r9, r2
    1372:	9b 18       	sub	r9, r11
    1374:	0e c0       	rjmp	.+28     	; 0x1392 <vfprintf+0x330>
    1376:	b2 14       	cp	r11, r2
    1378:	60 f4       	brcc	.+24     	; 0x1392 <vfprintf+0x330>
    137a:	b6 01       	movw	r22, r12
    137c:	80 e2       	ldi	r24, 0x20	; 32
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
    1384:	b3 94       	inc	r11
    1386:	f7 cf       	rjmp	.-18     	; 0x1376 <vfprintf+0x314>
    1388:	b2 14       	cp	r11, r2
    138a:	18 f4       	brcc	.+6      	; 0x1392 <vfprintf+0x330>
    138c:	2b 18       	sub	r2, r11
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <vfprintf+0x332>
    1390:	98 2c       	mov	r9, r8
    1392:	21 2c       	mov	r2, r1
    1394:	a4 fe       	sbrs	r10, 4
    1396:	10 c0       	rjmp	.+32     	; 0x13b8 <vfprintf+0x356>
    1398:	b6 01       	movw	r22, r12
    139a:	80 e3       	ldi	r24, 0x30	; 48
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
    13a2:	a2 fe       	sbrs	r10, 2
    13a4:	17 c0       	rjmp	.+46     	; 0x13d4 <vfprintf+0x372>
    13a6:	a1 fc       	sbrc	r10, 1
    13a8:	03 c0       	rjmp	.+6      	; 0x13b0 <vfprintf+0x34e>
    13aa:	88 e7       	ldi	r24, 0x78	; 120
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	02 c0       	rjmp	.+4      	; 0x13b4 <vfprintf+0x352>
    13b0:	88 e5       	ldi	r24, 0x58	; 88
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	b6 01       	movw	r22, r12
    13b6:	0c c0       	rjmp	.+24     	; 0x13d0 <vfprintf+0x36e>
    13b8:	8a 2d       	mov	r24, r10
    13ba:	86 78       	andi	r24, 0x86	; 134
    13bc:	59 f0       	breq	.+22     	; 0x13d4 <vfprintf+0x372>
    13be:	a1 fe       	sbrs	r10, 1
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <vfprintf+0x364>
    13c2:	8b e2       	ldi	r24, 0x2B	; 43
    13c4:	01 c0       	rjmp	.+2      	; 0x13c8 <vfprintf+0x366>
    13c6:	80 e2       	ldi	r24, 0x20	; 32
    13c8:	a7 fc       	sbrc	r10, 7
    13ca:	8d e2       	ldi	r24, 0x2D	; 45
    13cc:	b6 01       	movw	r22, r12
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
    13d4:	89 14       	cp	r8, r9
    13d6:	38 f4       	brcc	.+14     	; 0x13e6 <vfprintf+0x384>
    13d8:	b6 01       	movw	r22, r12
    13da:	80 e3       	ldi	r24, 0x30	; 48
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
    13e2:	9a 94       	dec	r9
    13e4:	f7 cf       	rjmp	.-18     	; 0x13d4 <vfprintf+0x372>
    13e6:	8a 94       	dec	r8
    13e8:	f3 01       	movw	r30, r6
    13ea:	e8 0d       	add	r30, r8
    13ec:	f1 1d       	adc	r31, r1
    13ee:	80 81       	ld	r24, Z
    13f0:	b6 01       	movw	r22, r12
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
    13f8:	81 10       	cpse	r8, r1
    13fa:	f5 cf       	rjmp	.-22     	; 0x13e6 <vfprintf+0x384>
    13fc:	22 20       	and	r2, r2
    13fe:	09 f4       	brne	.+2      	; 0x1402 <vfprintf+0x3a0>
    1400:	42 ce       	rjmp	.-892    	; 0x1086 <vfprintf+0x24>
    1402:	b6 01       	movw	r22, r12
    1404:	80 e2       	ldi	r24, 0x20	; 32
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
    140c:	2a 94       	dec	r2
    140e:	f6 cf       	rjmp	.-20     	; 0x13fc <vfprintf+0x39a>
    1410:	f6 01       	movw	r30, r12
    1412:	86 81       	ldd	r24, Z+6	; 0x06
    1414:	97 81       	ldd	r25, Z+7	; 0x07
    1416:	02 c0       	rjmp	.+4      	; 0x141c <vfprintf+0x3ba>
    1418:	8f ef       	ldi	r24, 0xFF	; 255
    141a:	9f ef       	ldi	r25, 0xFF	; 255
    141c:	2b 96       	adiw	r28, 0x0b	; 11
    141e:	e2 e1       	ldi	r30, 0x12	; 18
    1420:	0c 94 10 0d 	jmp	0x1a20	; 0x1a20 <__epilogue_restores__>

00001424 <dtoa_prf>:
    1424:	a9 e0       	ldi	r26, 0x09	; 9
    1426:	b0 e0       	ldi	r27, 0x00	; 0
    1428:	e8 e1       	ldi	r30, 0x18	; 24
    142a:	fa e0       	ldi	r31, 0x0A	; 10
    142c:	0c 94 fa 0c 	jmp	0x19f4	; 0x19f4 <__prologue_saves__+0xc>
    1430:	6a 01       	movw	r12, r20
    1432:	12 2f       	mov	r17, r18
    1434:	b0 2e       	mov	r11, r16
    1436:	2b e3       	ldi	r18, 0x3B	; 59
    1438:	20 17       	cp	r18, r16
    143a:	20 f0       	brcs	.+8      	; 0x1444 <dtoa_prf+0x20>
    143c:	ff 24       	eor	r15, r15
    143e:	f3 94       	inc	r15
    1440:	f0 0e       	add	r15, r16
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <dtoa_prf+0x24>
    1444:	2c e3       	ldi	r18, 0x3C	; 60
    1446:	f2 2e       	mov	r15, r18
    1448:	0f 2d       	mov	r16, r15
    144a:	27 e0       	ldi	r18, 0x07	; 7
    144c:	ae 01       	movw	r20, r28
    144e:	4f 5f       	subi	r20, 0xFF	; 255
    1450:	5f 4f       	sbci	r21, 0xFF	; 255
    1452:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__ftoa_engine>
    1456:	bc 01       	movw	r22, r24
    1458:	49 81       	ldd	r20, Y+1	; 0x01
    145a:	84 2f       	mov	r24, r20
    145c:	89 70       	andi	r24, 0x09	; 9
    145e:	81 30       	cpi	r24, 0x01	; 1
    1460:	31 f0       	breq	.+12     	; 0x146e <dtoa_prf+0x4a>
    1462:	e1 fc       	sbrc	r14, 1
    1464:	06 c0       	rjmp	.+12     	; 0x1472 <dtoa_prf+0x4e>
    1466:	e0 fe       	sbrs	r14, 0
    1468:	06 c0       	rjmp	.+12     	; 0x1476 <dtoa_prf+0x52>
    146a:	90 e2       	ldi	r25, 0x20	; 32
    146c:	05 c0       	rjmp	.+10     	; 0x1478 <dtoa_prf+0x54>
    146e:	9d e2       	ldi	r25, 0x2D	; 45
    1470:	03 c0       	rjmp	.+6      	; 0x1478 <dtoa_prf+0x54>
    1472:	9b e2       	ldi	r25, 0x2B	; 43
    1474:	01 c0       	rjmp	.+2      	; 0x1478 <dtoa_prf+0x54>
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	5e 2d       	mov	r21, r14
    147a:	50 71       	andi	r21, 0x10	; 16
    147c:	43 ff       	sbrs	r20, 3
    147e:	3c c0       	rjmp	.+120    	; 0x14f8 <dtoa_prf+0xd4>
    1480:	91 11       	cpse	r25, r1
    1482:	02 c0       	rjmp	.+4      	; 0x1488 <dtoa_prf+0x64>
    1484:	83 e0       	ldi	r24, 0x03	; 3
    1486:	01 c0       	rjmp	.+2      	; 0x148a <dtoa_prf+0x66>
    1488:	84 e0       	ldi	r24, 0x04	; 4
    148a:	81 17       	cp	r24, r17
    148c:	18 f4       	brcc	.+6      	; 0x1494 <dtoa_prf+0x70>
    148e:	21 2f       	mov	r18, r17
    1490:	28 1b       	sub	r18, r24
    1492:	01 c0       	rjmp	.+2      	; 0x1496 <dtoa_prf+0x72>
    1494:	20 e0       	ldi	r18, 0x00	; 0
    1496:	51 11       	cpse	r21, r1
    1498:	0b c0       	rjmp	.+22     	; 0x14b0 <dtoa_prf+0x8c>
    149a:	f6 01       	movw	r30, r12
    149c:	82 2f       	mov	r24, r18
    149e:	30 e2       	ldi	r19, 0x20	; 32
    14a0:	88 23       	and	r24, r24
    14a2:	19 f0       	breq	.+6      	; 0x14aa <dtoa_prf+0x86>
    14a4:	31 93       	st	Z+, r19
    14a6:	81 50       	subi	r24, 0x01	; 1
    14a8:	fb cf       	rjmp	.-10     	; 0x14a0 <dtoa_prf+0x7c>
    14aa:	c2 0e       	add	r12, r18
    14ac:	d1 1c       	adc	r13, r1
    14ae:	20 e0       	ldi	r18, 0x00	; 0
    14b0:	99 23       	and	r25, r25
    14b2:	29 f0       	breq	.+10     	; 0x14be <dtoa_prf+0x9a>
    14b4:	d6 01       	movw	r26, r12
    14b6:	9c 93       	st	X, r25
    14b8:	f6 01       	movw	r30, r12
    14ba:	31 96       	adiw	r30, 0x01	; 1
    14bc:	6f 01       	movw	r12, r30
    14be:	c6 01       	movw	r24, r12
    14c0:	03 96       	adiw	r24, 0x03	; 3
    14c2:	e2 fe       	sbrs	r14, 2
    14c4:	0a c0       	rjmp	.+20     	; 0x14da <dtoa_prf+0xb6>
    14c6:	3e e4       	ldi	r19, 0x4E	; 78
    14c8:	d6 01       	movw	r26, r12
    14ca:	3c 93       	st	X, r19
    14cc:	41 e4       	ldi	r20, 0x41	; 65
    14ce:	11 96       	adiw	r26, 0x01	; 1
    14d0:	4c 93       	st	X, r20
    14d2:	11 97       	sbiw	r26, 0x01	; 1
    14d4:	12 96       	adiw	r26, 0x02	; 2
    14d6:	3c 93       	st	X, r19
    14d8:	06 c0       	rjmp	.+12     	; 0x14e6 <dtoa_prf+0xc2>
    14da:	3e e6       	ldi	r19, 0x6E	; 110
    14dc:	f6 01       	movw	r30, r12
    14de:	30 83       	st	Z, r19
    14e0:	41 e6       	ldi	r20, 0x61	; 97
    14e2:	41 83       	std	Z+1, r20	; 0x01
    14e4:	32 83       	std	Z+2, r19	; 0x02
    14e6:	fc 01       	movw	r30, r24
    14e8:	32 2f       	mov	r19, r18
    14ea:	40 e2       	ldi	r20, 0x20	; 32
    14ec:	33 23       	and	r19, r19
    14ee:	09 f4       	brne	.+2      	; 0x14f2 <dtoa_prf+0xce>
    14f0:	42 c0       	rjmp	.+132    	; 0x1576 <dtoa_prf+0x152>
    14f2:	41 93       	st	Z+, r20
    14f4:	31 50       	subi	r19, 0x01	; 1
    14f6:	fa cf       	rjmp	.-12     	; 0x14ec <dtoa_prf+0xc8>
    14f8:	42 ff       	sbrs	r20, 2
    14fa:	44 c0       	rjmp	.+136    	; 0x1584 <dtoa_prf+0x160>
    14fc:	91 11       	cpse	r25, r1
    14fe:	02 c0       	rjmp	.+4      	; 0x1504 <dtoa_prf+0xe0>
    1500:	83 e0       	ldi	r24, 0x03	; 3
    1502:	01 c0       	rjmp	.+2      	; 0x1506 <dtoa_prf+0xe2>
    1504:	84 e0       	ldi	r24, 0x04	; 4
    1506:	81 17       	cp	r24, r17
    1508:	18 f4       	brcc	.+6      	; 0x1510 <dtoa_prf+0xec>
    150a:	21 2f       	mov	r18, r17
    150c:	28 1b       	sub	r18, r24
    150e:	01 c0       	rjmp	.+2      	; 0x1512 <dtoa_prf+0xee>
    1510:	20 e0       	ldi	r18, 0x00	; 0
    1512:	51 11       	cpse	r21, r1
    1514:	0b c0       	rjmp	.+22     	; 0x152c <dtoa_prf+0x108>
    1516:	f6 01       	movw	r30, r12
    1518:	82 2f       	mov	r24, r18
    151a:	30 e2       	ldi	r19, 0x20	; 32
    151c:	88 23       	and	r24, r24
    151e:	19 f0       	breq	.+6      	; 0x1526 <dtoa_prf+0x102>
    1520:	31 93       	st	Z+, r19
    1522:	81 50       	subi	r24, 0x01	; 1
    1524:	fb cf       	rjmp	.-10     	; 0x151c <dtoa_prf+0xf8>
    1526:	c2 0e       	add	r12, r18
    1528:	d1 1c       	adc	r13, r1
    152a:	20 e0       	ldi	r18, 0x00	; 0
    152c:	99 23       	and	r25, r25
    152e:	29 f0       	breq	.+10     	; 0x153a <dtoa_prf+0x116>
    1530:	d6 01       	movw	r26, r12
    1532:	9c 93       	st	X, r25
    1534:	f6 01       	movw	r30, r12
    1536:	31 96       	adiw	r30, 0x01	; 1
    1538:	6f 01       	movw	r12, r30
    153a:	c6 01       	movw	r24, r12
    153c:	03 96       	adiw	r24, 0x03	; 3
    153e:	e2 fe       	sbrs	r14, 2
    1540:	0b c0       	rjmp	.+22     	; 0x1558 <dtoa_prf+0x134>
    1542:	39 e4       	ldi	r19, 0x49	; 73
    1544:	d6 01       	movw	r26, r12
    1546:	3c 93       	st	X, r19
    1548:	3e e4       	ldi	r19, 0x4E	; 78
    154a:	11 96       	adiw	r26, 0x01	; 1
    154c:	3c 93       	st	X, r19
    154e:	11 97       	sbiw	r26, 0x01	; 1
    1550:	36 e4       	ldi	r19, 0x46	; 70
    1552:	12 96       	adiw	r26, 0x02	; 2
    1554:	3c 93       	st	X, r19
    1556:	07 c0       	rjmp	.+14     	; 0x1566 <dtoa_prf+0x142>
    1558:	39 e6       	ldi	r19, 0x69	; 105
    155a:	f6 01       	movw	r30, r12
    155c:	30 83       	st	Z, r19
    155e:	3e e6       	ldi	r19, 0x6E	; 110
    1560:	31 83       	std	Z+1, r19	; 0x01
    1562:	36 e6       	ldi	r19, 0x66	; 102
    1564:	32 83       	std	Z+2, r19	; 0x02
    1566:	fc 01       	movw	r30, r24
    1568:	32 2f       	mov	r19, r18
    156a:	40 e2       	ldi	r20, 0x20	; 32
    156c:	33 23       	and	r19, r19
    156e:	19 f0       	breq	.+6      	; 0x1576 <dtoa_prf+0x152>
    1570:	41 93       	st	Z+, r20
    1572:	31 50       	subi	r19, 0x01	; 1
    1574:	fb cf       	rjmp	.-10     	; 0x156c <dtoa_prf+0x148>
    1576:	fc 01       	movw	r30, r24
    1578:	e2 0f       	add	r30, r18
    157a:	f1 1d       	adc	r31, r1
    157c:	10 82       	st	Z, r1
    157e:	8e ef       	ldi	r24, 0xFE	; 254
    1580:	9f ef       	ldi	r25, 0xFF	; 255
    1582:	a6 c0       	rjmp	.+332    	; 0x16d0 <dtoa_prf+0x2ac>
    1584:	21 e0       	ldi	r18, 0x01	; 1
    1586:	30 e0       	ldi	r19, 0x00	; 0
    1588:	91 11       	cpse	r25, r1
    158a:	02 c0       	rjmp	.+4      	; 0x1590 <dtoa_prf+0x16c>
    158c:	20 e0       	ldi	r18, 0x00	; 0
    158e:	30 e0       	ldi	r19, 0x00	; 0
    1590:	16 16       	cp	r1, r22
    1592:	17 06       	cpc	r1, r23
    1594:	1c f4       	brge	.+6      	; 0x159c <dtoa_prf+0x178>
    1596:	fb 01       	movw	r30, r22
    1598:	31 96       	adiw	r30, 0x01	; 1
    159a:	02 c0       	rjmp	.+4      	; 0x15a0 <dtoa_prf+0x17c>
    159c:	e1 e0       	ldi	r30, 0x01	; 1
    159e:	f0 e0       	ldi	r31, 0x00	; 0
    15a0:	2e 0f       	add	r18, r30
    15a2:	3f 1f       	adc	r19, r31
    15a4:	bb 20       	and	r11, r11
    15a6:	21 f0       	breq	.+8      	; 0x15b0 <dtoa_prf+0x18c>
    15a8:	eb 2d       	mov	r30, r11
    15aa:	f0 e0       	ldi	r31, 0x00	; 0
    15ac:	31 96       	adiw	r30, 0x01	; 1
    15ae:	02 c0       	rjmp	.+4      	; 0x15b4 <dtoa_prf+0x190>
    15b0:	e0 e0       	ldi	r30, 0x00	; 0
    15b2:	f0 e0       	ldi	r31, 0x00	; 0
    15b4:	2e 0f       	add	r18, r30
    15b6:	3f 1f       	adc	r19, r31
    15b8:	e1 2f       	mov	r30, r17
    15ba:	f0 e0       	ldi	r31, 0x00	; 0
    15bc:	2e 17       	cp	r18, r30
    15be:	3f 07       	cpc	r19, r31
    15c0:	1c f4       	brge	.+6      	; 0x15c8 <dtoa_prf+0x1a4>
    15c2:	12 1b       	sub	r17, r18
    15c4:	21 2f       	mov	r18, r17
    15c6:	01 c0       	rjmp	.+2      	; 0x15ca <dtoa_prf+0x1a6>
    15c8:	20 e0       	ldi	r18, 0x00	; 0
    15ca:	8e 2d       	mov	r24, r14
    15cc:	88 71       	andi	r24, 0x18	; 24
    15ce:	59 f4       	brne	.+22     	; 0x15e6 <dtoa_prf+0x1c2>
    15d0:	f6 01       	movw	r30, r12
    15d2:	82 2f       	mov	r24, r18
    15d4:	30 e2       	ldi	r19, 0x20	; 32
    15d6:	88 23       	and	r24, r24
    15d8:	19 f0       	breq	.+6      	; 0x15e0 <dtoa_prf+0x1bc>
    15da:	31 93       	st	Z+, r19
    15dc:	81 50       	subi	r24, 0x01	; 1
    15de:	fb cf       	rjmp	.-10     	; 0x15d6 <dtoa_prf+0x1b2>
    15e0:	c2 0e       	add	r12, r18
    15e2:	d1 1c       	adc	r13, r1
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	99 23       	and	r25, r25
    15e8:	29 f0       	breq	.+10     	; 0x15f4 <dtoa_prf+0x1d0>
    15ea:	d6 01       	movw	r26, r12
    15ec:	9c 93       	st	X, r25
    15ee:	f6 01       	movw	r30, r12
    15f0:	31 96       	adiw	r30, 0x01	; 1
    15f2:	6f 01       	movw	r12, r30
    15f4:	51 11       	cpse	r21, r1
    15f6:	0b c0       	rjmp	.+22     	; 0x160e <dtoa_prf+0x1ea>
    15f8:	f6 01       	movw	r30, r12
    15fa:	82 2f       	mov	r24, r18
    15fc:	90 e3       	ldi	r25, 0x30	; 48
    15fe:	88 23       	and	r24, r24
    1600:	19 f0       	breq	.+6      	; 0x1608 <dtoa_prf+0x1e4>
    1602:	91 93       	st	Z+, r25
    1604:	81 50       	subi	r24, 0x01	; 1
    1606:	fb cf       	rjmp	.-10     	; 0x15fe <dtoa_prf+0x1da>
    1608:	c2 0e       	add	r12, r18
    160a:	d1 1c       	adc	r13, r1
    160c:	20 e0       	ldi	r18, 0x00	; 0
    160e:	0f 2d       	mov	r16, r15
    1610:	06 0f       	add	r16, r22
    1612:	9a 81       	ldd	r25, Y+2	; 0x02
    1614:	34 2f       	mov	r19, r20
    1616:	30 71       	andi	r19, 0x10	; 16
    1618:	44 ff       	sbrs	r20, 4
    161a:	03 c0       	rjmp	.+6      	; 0x1622 <dtoa_prf+0x1fe>
    161c:	91 33       	cpi	r25, 0x31	; 49
    161e:	09 f4       	brne	.+2      	; 0x1622 <dtoa_prf+0x1fe>
    1620:	01 50       	subi	r16, 0x01	; 1
    1622:	10 16       	cp	r1, r16
    1624:	24 f4       	brge	.+8      	; 0x162e <dtoa_prf+0x20a>
    1626:	09 30       	cpi	r16, 0x09	; 9
    1628:	18 f0       	brcs	.+6      	; 0x1630 <dtoa_prf+0x20c>
    162a:	08 e0       	ldi	r16, 0x08	; 8
    162c:	01 c0       	rjmp	.+2      	; 0x1630 <dtoa_prf+0x20c>
    162e:	01 e0       	ldi	r16, 0x01	; 1
    1630:	ab 01       	movw	r20, r22
    1632:	77 ff       	sbrs	r23, 7
    1634:	02 c0       	rjmp	.+4      	; 0x163a <dtoa_prf+0x216>
    1636:	40 e0       	ldi	r20, 0x00	; 0
    1638:	50 e0       	ldi	r21, 0x00	; 0
    163a:	fb 01       	movw	r30, r22
    163c:	e4 1b       	sub	r30, r20
    163e:	f5 0b       	sbc	r31, r21
    1640:	a1 e0       	ldi	r26, 0x01	; 1
    1642:	b0 e0       	ldi	r27, 0x00	; 0
    1644:	ac 0f       	add	r26, r28
    1646:	bd 1f       	adc	r27, r29
    1648:	ea 0f       	add	r30, r26
    164a:	fb 1f       	adc	r31, r27
    164c:	8e e2       	ldi	r24, 0x2E	; 46
    164e:	a8 2e       	mov	r10, r24
    1650:	4b 01       	movw	r8, r22
    1652:	80 1a       	sub	r8, r16
    1654:	91 08       	sbc	r9, r1
    1656:	0b 2d       	mov	r16, r11
    1658:	10 e0       	ldi	r17, 0x00	; 0
    165a:	11 95       	neg	r17
    165c:	01 95       	neg	r16
    165e:	11 09       	sbc	r17, r1
    1660:	4f 3f       	cpi	r20, 0xFF	; 255
    1662:	bf ef       	ldi	r27, 0xFF	; 255
    1664:	5b 07       	cpc	r21, r27
    1666:	21 f4       	brne	.+8      	; 0x1670 <dtoa_prf+0x24c>
    1668:	d6 01       	movw	r26, r12
    166a:	ac 92       	st	X, r10
    166c:	11 96       	adiw	r26, 0x01	; 1
    166e:	6d 01       	movw	r12, r26
    1670:	64 17       	cp	r22, r20
    1672:	75 07       	cpc	r23, r21
    1674:	2c f0       	brlt	.+10     	; 0x1680 <dtoa_prf+0x25c>
    1676:	84 16       	cp	r8, r20
    1678:	95 06       	cpc	r9, r21
    167a:	14 f4       	brge	.+4      	; 0x1680 <dtoa_prf+0x25c>
    167c:	81 81       	ldd	r24, Z+1	; 0x01
    167e:	01 c0       	rjmp	.+2      	; 0x1682 <dtoa_prf+0x25e>
    1680:	80 e3       	ldi	r24, 0x30	; 48
    1682:	41 50       	subi	r20, 0x01	; 1
    1684:	51 09       	sbc	r21, r1
    1686:	31 96       	adiw	r30, 0x01	; 1
    1688:	d6 01       	movw	r26, r12
    168a:	11 96       	adiw	r26, 0x01	; 1
    168c:	7d 01       	movw	r14, r26
    168e:	40 17       	cp	r20, r16
    1690:	51 07       	cpc	r21, r17
    1692:	24 f0       	brlt	.+8      	; 0x169c <dtoa_prf+0x278>
    1694:	d6 01       	movw	r26, r12
    1696:	8c 93       	st	X, r24
    1698:	67 01       	movw	r12, r14
    169a:	e2 cf       	rjmp	.-60     	; 0x1660 <dtoa_prf+0x23c>
    169c:	64 17       	cp	r22, r20
    169e:	75 07       	cpc	r23, r21
    16a0:	39 f4       	brne	.+14     	; 0x16b0 <dtoa_prf+0x28c>
    16a2:	96 33       	cpi	r25, 0x36	; 54
    16a4:	20 f4       	brcc	.+8      	; 0x16ae <dtoa_prf+0x28a>
    16a6:	95 33       	cpi	r25, 0x35	; 53
    16a8:	19 f4       	brne	.+6      	; 0x16b0 <dtoa_prf+0x28c>
    16aa:	31 11       	cpse	r19, r1
    16ac:	01 c0       	rjmp	.+2      	; 0x16b0 <dtoa_prf+0x28c>
    16ae:	81 e3       	ldi	r24, 0x31	; 49
    16b0:	f6 01       	movw	r30, r12
    16b2:	80 83       	st	Z, r24
    16b4:	f7 01       	movw	r30, r14
    16b6:	82 2f       	mov	r24, r18
    16b8:	90 e2       	ldi	r25, 0x20	; 32
    16ba:	88 23       	and	r24, r24
    16bc:	19 f0       	breq	.+6      	; 0x16c4 <dtoa_prf+0x2a0>
    16be:	91 93       	st	Z+, r25
    16c0:	81 50       	subi	r24, 0x01	; 1
    16c2:	fb cf       	rjmp	.-10     	; 0x16ba <dtoa_prf+0x296>
    16c4:	f7 01       	movw	r30, r14
    16c6:	e2 0f       	add	r30, r18
    16c8:	f1 1d       	adc	r31, r1
    16ca:	10 82       	st	Z, r1
    16cc:	80 e0       	ldi	r24, 0x00	; 0
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	29 96       	adiw	r28, 0x09	; 9
    16d2:	ec e0       	ldi	r30, 0x0C	; 12
    16d4:	0c 94 16 0d 	jmp	0x1a2c	; 0x1a2c <__epilogue_restores__+0xc>

000016d8 <__ftoa_engine>:
    16d8:	28 30       	cpi	r18, 0x08	; 8
    16da:	08 f0       	brcs	.+2      	; 0x16de <__ftoa_engine+0x6>
    16dc:	27 e0       	ldi	r18, 0x07	; 7
    16de:	33 27       	eor	r19, r19
    16e0:	da 01       	movw	r26, r20
    16e2:	99 0f       	add	r25, r25
    16e4:	31 1d       	adc	r19, r1
    16e6:	87 fd       	sbrc	r24, 7
    16e8:	91 60       	ori	r25, 0x01	; 1
    16ea:	00 96       	adiw	r24, 0x00	; 0
    16ec:	61 05       	cpc	r22, r1
    16ee:	71 05       	cpc	r23, r1
    16f0:	39 f4       	brne	.+14     	; 0x1700 <__ftoa_engine+0x28>
    16f2:	32 60       	ori	r19, 0x02	; 2
    16f4:	2e 5f       	subi	r18, 0xFE	; 254
    16f6:	3d 93       	st	X+, r19
    16f8:	30 e3       	ldi	r19, 0x30	; 48
    16fa:	2a 95       	dec	r18
    16fc:	e1 f7       	brne	.-8      	; 0x16f6 <__ftoa_engine+0x1e>
    16fe:	08 95       	ret
    1700:	9f 3f       	cpi	r25, 0xFF	; 255
    1702:	30 f0       	brcs	.+12     	; 0x1710 <__ftoa_engine+0x38>
    1704:	80 38       	cpi	r24, 0x80	; 128
    1706:	71 05       	cpc	r23, r1
    1708:	61 05       	cpc	r22, r1
    170a:	09 f0       	breq	.+2      	; 0x170e <__ftoa_engine+0x36>
    170c:	3c 5f       	subi	r19, 0xFC	; 252
    170e:	3c 5f       	subi	r19, 0xFC	; 252
    1710:	3d 93       	st	X+, r19
    1712:	91 30       	cpi	r25, 0x01	; 1
    1714:	08 f0       	brcs	.+2      	; 0x1718 <__ftoa_engine+0x40>
    1716:	80 68       	ori	r24, 0x80	; 128
    1718:	91 1d       	adc	r25, r1
    171a:	df 93       	push	r29
    171c:	cf 93       	push	r28
    171e:	1f 93       	push	r17
    1720:	0f 93       	push	r16
    1722:	ff 92       	push	r15
    1724:	ef 92       	push	r14
    1726:	19 2f       	mov	r17, r25
    1728:	98 7f       	andi	r25, 0xF8	; 248
    172a:	96 95       	lsr	r25
    172c:	e9 2f       	mov	r30, r25
    172e:	96 95       	lsr	r25
    1730:	96 95       	lsr	r25
    1732:	e9 0f       	add	r30, r25
    1734:	ff 27       	eor	r31, r31
    1736:	ee 53       	subi	r30, 0x3E	; 62
    1738:	ff 4f       	sbci	r31, 0xFF	; 255
    173a:	99 27       	eor	r25, r25
    173c:	33 27       	eor	r19, r19
    173e:	ee 24       	eor	r14, r14
    1740:	ff 24       	eor	r15, r15
    1742:	a7 01       	movw	r20, r14
    1744:	e7 01       	movw	r28, r14
    1746:	05 90       	lpm	r0, Z+
    1748:	08 94       	sec
    174a:	07 94       	ror	r0
    174c:	28 f4       	brcc	.+10     	; 0x1758 <__ftoa_engine+0x80>
    174e:	36 0f       	add	r19, r22
    1750:	e7 1e       	adc	r14, r23
    1752:	f8 1e       	adc	r15, r24
    1754:	49 1f       	adc	r20, r25
    1756:	51 1d       	adc	r21, r1
    1758:	66 0f       	add	r22, r22
    175a:	77 1f       	adc	r23, r23
    175c:	88 1f       	adc	r24, r24
    175e:	99 1f       	adc	r25, r25
    1760:	06 94       	lsr	r0
    1762:	a1 f7       	brne	.-24     	; 0x174c <__ftoa_engine+0x74>
    1764:	05 90       	lpm	r0, Z+
    1766:	07 94       	ror	r0
    1768:	28 f4       	brcc	.+10     	; 0x1774 <__ftoa_engine+0x9c>
    176a:	e7 0e       	add	r14, r23
    176c:	f8 1e       	adc	r15, r24
    176e:	49 1f       	adc	r20, r25
    1770:	56 1f       	adc	r21, r22
    1772:	c1 1d       	adc	r28, r1
    1774:	77 0f       	add	r23, r23
    1776:	88 1f       	adc	r24, r24
    1778:	99 1f       	adc	r25, r25
    177a:	66 1f       	adc	r22, r22
    177c:	06 94       	lsr	r0
    177e:	a1 f7       	brne	.-24     	; 0x1768 <__ftoa_engine+0x90>
    1780:	05 90       	lpm	r0, Z+
    1782:	07 94       	ror	r0
    1784:	28 f4       	brcc	.+10     	; 0x1790 <__ftoa_engine+0xb8>
    1786:	f8 0e       	add	r15, r24
    1788:	49 1f       	adc	r20, r25
    178a:	56 1f       	adc	r21, r22
    178c:	c7 1f       	adc	r28, r23
    178e:	d1 1d       	adc	r29, r1
    1790:	88 0f       	add	r24, r24
    1792:	99 1f       	adc	r25, r25
    1794:	66 1f       	adc	r22, r22
    1796:	77 1f       	adc	r23, r23
    1798:	06 94       	lsr	r0
    179a:	a1 f7       	brne	.-24     	; 0x1784 <__ftoa_engine+0xac>
    179c:	05 90       	lpm	r0, Z+
    179e:	07 94       	ror	r0
    17a0:	20 f4       	brcc	.+8      	; 0x17aa <__ftoa_engine+0xd2>
    17a2:	49 0f       	add	r20, r25
    17a4:	56 1f       	adc	r21, r22
    17a6:	c7 1f       	adc	r28, r23
    17a8:	d8 1f       	adc	r29, r24
    17aa:	99 0f       	add	r25, r25
    17ac:	66 1f       	adc	r22, r22
    17ae:	77 1f       	adc	r23, r23
    17b0:	88 1f       	adc	r24, r24
    17b2:	06 94       	lsr	r0
    17b4:	a9 f7       	brne	.-22     	; 0x17a0 <__ftoa_engine+0xc8>
    17b6:	84 91       	lpm	r24, Z
    17b8:	10 95       	com	r17
    17ba:	17 70       	andi	r17, 0x07	; 7
    17bc:	41 f0       	breq	.+16     	; 0x17ce <__ftoa_engine+0xf6>
    17be:	d6 95       	lsr	r29
    17c0:	c7 95       	ror	r28
    17c2:	57 95       	ror	r21
    17c4:	47 95       	ror	r20
    17c6:	f7 94       	ror	r15
    17c8:	e7 94       	ror	r14
    17ca:	1a 95       	dec	r17
    17cc:	c1 f7       	brne	.-16     	; 0x17be <__ftoa_engine+0xe6>
    17ce:	e8 e6       	ldi	r30, 0x68	; 104
    17d0:	f0 e0       	ldi	r31, 0x00	; 0
    17d2:	68 94       	set
    17d4:	15 90       	lpm	r1, Z+
    17d6:	15 91       	lpm	r17, Z+
    17d8:	35 91       	lpm	r19, Z+
    17da:	65 91       	lpm	r22, Z+
    17dc:	95 91       	lpm	r25, Z+
    17de:	05 90       	lpm	r0, Z+
    17e0:	7f e2       	ldi	r23, 0x2F	; 47
    17e2:	73 95       	inc	r23
    17e4:	e1 18       	sub	r14, r1
    17e6:	f1 0a       	sbc	r15, r17
    17e8:	43 0b       	sbc	r20, r19
    17ea:	56 0b       	sbc	r21, r22
    17ec:	c9 0b       	sbc	r28, r25
    17ee:	d0 09       	sbc	r29, r0
    17f0:	c0 f7       	brcc	.-16     	; 0x17e2 <__ftoa_engine+0x10a>
    17f2:	e1 0c       	add	r14, r1
    17f4:	f1 1e       	adc	r15, r17
    17f6:	43 1f       	adc	r20, r19
    17f8:	56 1f       	adc	r21, r22
    17fa:	c9 1f       	adc	r28, r25
    17fc:	d0 1d       	adc	r29, r0
    17fe:	7e f4       	brtc	.+30     	; 0x181e <__ftoa_engine+0x146>
    1800:	70 33       	cpi	r23, 0x30	; 48
    1802:	11 f4       	brne	.+4      	; 0x1808 <__ftoa_engine+0x130>
    1804:	8a 95       	dec	r24
    1806:	e6 cf       	rjmp	.-52     	; 0x17d4 <__ftoa_engine+0xfc>
    1808:	e8 94       	clt
    180a:	01 50       	subi	r16, 0x01	; 1
    180c:	30 f0       	brcs	.+12     	; 0x181a <__ftoa_engine+0x142>
    180e:	08 0f       	add	r16, r24
    1810:	0a f4       	brpl	.+2      	; 0x1814 <__ftoa_engine+0x13c>
    1812:	00 27       	eor	r16, r16
    1814:	02 17       	cp	r16, r18
    1816:	08 f4       	brcc	.+2      	; 0x181a <__ftoa_engine+0x142>
    1818:	20 2f       	mov	r18, r16
    181a:	23 95       	inc	r18
    181c:	02 2f       	mov	r16, r18
    181e:	7a 33       	cpi	r23, 0x3A	; 58
    1820:	28 f0       	brcs	.+10     	; 0x182c <__ftoa_engine+0x154>
    1822:	79 e3       	ldi	r23, 0x39	; 57
    1824:	7d 93       	st	X+, r23
    1826:	2a 95       	dec	r18
    1828:	e9 f7       	brne	.-6      	; 0x1824 <__ftoa_engine+0x14c>
    182a:	10 c0       	rjmp	.+32     	; 0x184c <__ftoa_engine+0x174>
    182c:	7d 93       	st	X+, r23
    182e:	2a 95       	dec	r18
    1830:	89 f6       	brne	.-94     	; 0x17d4 <__ftoa_engine+0xfc>
    1832:	06 94       	lsr	r0
    1834:	97 95       	ror	r25
    1836:	67 95       	ror	r22
    1838:	37 95       	ror	r19
    183a:	17 95       	ror	r17
    183c:	17 94       	ror	r1
    183e:	e1 18       	sub	r14, r1
    1840:	f1 0a       	sbc	r15, r17
    1842:	43 0b       	sbc	r20, r19
    1844:	56 0b       	sbc	r21, r22
    1846:	c9 0b       	sbc	r28, r25
    1848:	d0 09       	sbc	r29, r0
    184a:	98 f0       	brcs	.+38     	; 0x1872 <__ftoa_engine+0x19a>
    184c:	23 95       	inc	r18
    184e:	7e 91       	ld	r23, -X
    1850:	73 95       	inc	r23
    1852:	7a 33       	cpi	r23, 0x3A	; 58
    1854:	08 f0       	brcs	.+2      	; 0x1858 <__ftoa_engine+0x180>
    1856:	70 e3       	ldi	r23, 0x30	; 48
    1858:	7c 93       	st	X, r23
    185a:	20 13       	cpse	r18, r16
    185c:	b8 f7       	brcc	.-18     	; 0x184c <__ftoa_engine+0x174>
    185e:	7e 91       	ld	r23, -X
    1860:	70 61       	ori	r23, 0x10	; 16
    1862:	7d 93       	st	X+, r23
    1864:	30 f0       	brcs	.+12     	; 0x1872 <__ftoa_engine+0x19a>
    1866:	83 95       	inc	r24
    1868:	71 e3       	ldi	r23, 0x31	; 49
    186a:	7d 93       	st	X+, r23
    186c:	70 e3       	ldi	r23, 0x30	; 48
    186e:	2a 95       	dec	r18
    1870:	e1 f7       	brne	.-8      	; 0x186a <__ftoa_engine+0x192>
    1872:	11 24       	eor	r1, r1
    1874:	ef 90       	pop	r14
    1876:	ff 90       	pop	r15
    1878:	0f 91       	pop	r16
    187a:	1f 91       	pop	r17
    187c:	cf 91       	pop	r28
    187e:	df 91       	pop	r29
    1880:	99 27       	eor	r25, r25
    1882:	87 fd       	sbrc	r24, 7
    1884:	90 95       	com	r25
    1886:	08 95       	ret

00001888 <strnlen_P>:
    1888:	fc 01       	movw	r30, r24
    188a:	05 90       	lpm	r0, Z+
    188c:	61 50       	subi	r22, 0x01	; 1
    188e:	70 40       	sbci	r23, 0x00	; 0
    1890:	01 10       	cpse	r0, r1
    1892:	d8 f7       	brcc	.-10     	; 0x188a <strnlen_P+0x2>
    1894:	80 95       	com	r24
    1896:	90 95       	com	r25
    1898:	8e 0f       	add	r24, r30
    189a:	9f 1f       	adc	r25, r31
    189c:	08 95       	ret

0000189e <strnlen>:
    189e:	fc 01       	movw	r30, r24
    18a0:	61 50       	subi	r22, 0x01	; 1
    18a2:	70 40       	sbci	r23, 0x00	; 0
    18a4:	01 90       	ld	r0, Z+
    18a6:	01 10       	cpse	r0, r1
    18a8:	d8 f7       	brcc	.-10     	; 0x18a0 <strnlen+0x2>
    18aa:	80 95       	com	r24
    18ac:	90 95       	com	r25
    18ae:	8e 0f       	add	r24, r30
    18b0:	9f 1f       	adc	r25, r31
    18b2:	08 95       	ret

000018b4 <fputc>:
    18b4:	0f 93       	push	r16
    18b6:	1f 93       	push	r17
    18b8:	cf 93       	push	r28
    18ba:	df 93       	push	r29
    18bc:	fb 01       	movw	r30, r22
    18be:	23 81       	ldd	r18, Z+3	; 0x03
    18c0:	21 fd       	sbrc	r18, 1
    18c2:	03 c0       	rjmp	.+6      	; 0x18ca <fputc+0x16>
    18c4:	8f ef       	ldi	r24, 0xFF	; 255
    18c6:	9f ef       	ldi	r25, 0xFF	; 255
    18c8:	2c c0       	rjmp	.+88     	; 0x1922 <fputc+0x6e>
    18ca:	22 ff       	sbrs	r18, 2
    18cc:	16 c0       	rjmp	.+44     	; 0x18fa <fputc+0x46>
    18ce:	46 81       	ldd	r20, Z+6	; 0x06
    18d0:	57 81       	ldd	r21, Z+7	; 0x07
    18d2:	24 81       	ldd	r18, Z+4	; 0x04
    18d4:	35 81       	ldd	r19, Z+5	; 0x05
    18d6:	42 17       	cp	r20, r18
    18d8:	53 07       	cpc	r21, r19
    18da:	44 f4       	brge	.+16     	; 0x18ec <fputc+0x38>
    18dc:	a0 81       	ld	r26, Z
    18de:	b1 81       	ldd	r27, Z+1	; 0x01
    18e0:	9d 01       	movw	r18, r26
    18e2:	2f 5f       	subi	r18, 0xFF	; 255
    18e4:	3f 4f       	sbci	r19, 0xFF	; 255
    18e6:	31 83       	std	Z+1, r19	; 0x01
    18e8:	20 83       	st	Z, r18
    18ea:	8c 93       	st	X, r24
    18ec:	26 81       	ldd	r18, Z+6	; 0x06
    18ee:	37 81       	ldd	r19, Z+7	; 0x07
    18f0:	2f 5f       	subi	r18, 0xFF	; 255
    18f2:	3f 4f       	sbci	r19, 0xFF	; 255
    18f4:	37 83       	std	Z+7, r19	; 0x07
    18f6:	26 83       	std	Z+6, r18	; 0x06
    18f8:	14 c0       	rjmp	.+40     	; 0x1922 <fputc+0x6e>
    18fa:	8b 01       	movw	r16, r22
    18fc:	ec 01       	movw	r28, r24
    18fe:	fb 01       	movw	r30, r22
    1900:	00 84       	ldd	r0, Z+8	; 0x08
    1902:	f1 85       	ldd	r31, Z+9	; 0x09
    1904:	e0 2d       	mov	r30, r0
    1906:	09 95       	icall
    1908:	89 2b       	or	r24, r25
    190a:	e1 f6       	brne	.-72     	; 0x18c4 <fputc+0x10>
    190c:	d8 01       	movw	r26, r16
    190e:	16 96       	adiw	r26, 0x06	; 6
    1910:	8d 91       	ld	r24, X+
    1912:	9c 91       	ld	r25, X
    1914:	17 97       	sbiw	r26, 0x07	; 7
    1916:	01 96       	adiw	r24, 0x01	; 1
    1918:	17 96       	adiw	r26, 0x07	; 7
    191a:	9c 93       	st	X, r25
    191c:	8e 93       	st	-X, r24
    191e:	16 97       	sbiw	r26, 0x06	; 6
    1920:	ce 01       	movw	r24, r28
    1922:	df 91       	pop	r29
    1924:	cf 91       	pop	r28
    1926:	1f 91       	pop	r17
    1928:	0f 91       	pop	r16
    192a:	08 95       	ret

0000192c <__ultoa_invert>:
    192c:	fa 01       	movw	r30, r20
    192e:	aa 27       	eor	r26, r26
    1930:	28 30       	cpi	r18, 0x08	; 8
    1932:	51 f1       	breq	.+84     	; 0x1988 <__ultoa_invert+0x5c>
    1934:	20 31       	cpi	r18, 0x10	; 16
    1936:	81 f1       	breq	.+96     	; 0x1998 <__ultoa_invert+0x6c>
    1938:	e8 94       	clt
    193a:	6f 93       	push	r22
    193c:	6e 7f       	andi	r22, 0xFE	; 254
    193e:	6e 5f       	subi	r22, 0xFE	; 254
    1940:	7f 4f       	sbci	r23, 0xFF	; 255
    1942:	8f 4f       	sbci	r24, 0xFF	; 255
    1944:	9f 4f       	sbci	r25, 0xFF	; 255
    1946:	af 4f       	sbci	r26, 0xFF	; 255
    1948:	b1 e0       	ldi	r27, 0x01	; 1
    194a:	3e d0       	rcall	.+124    	; 0x19c8 <__ultoa_invert+0x9c>
    194c:	b4 e0       	ldi	r27, 0x04	; 4
    194e:	3c d0       	rcall	.+120    	; 0x19c8 <__ultoa_invert+0x9c>
    1950:	67 0f       	add	r22, r23
    1952:	78 1f       	adc	r23, r24
    1954:	89 1f       	adc	r24, r25
    1956:	9a 1f       	adc	r25, r26
    1958:	a1 1d       	adc	r26, r1
    195a:	68 0f       	add	r22, r24
    195c:	79 1f       	adc	r23, r25
    195e:	8a 1f       	adc	r24, r26
    1960:	91 1d       	adc	r25, r1
    1962:	a1 1d       	adc	r26, r1
    1964:	6a 0f       	add	r22, r26
    1966:	71 1d       	adc	r23, r1
    1968:	81 1d       	adc	r24, r1
    196a:	91 1d       	adc	r25, r1
    196c:	a1 1d       	adc	r26, r1
    196e:	20 d0       	rcall	.+64     	; 0x19b0 <__ultoa_invert+0x84>
    1970:	09 f4       	brne	.+2      	; 0x1974 <__ultoa_invert+0x48>
    1972:	68 94       	set
    1974:	3f 91       	pop	r19
    1976:	2a e0       	ldi	r18, 0x0A	; 10
    1978:	26 9f       	mul	r18, r22
    197a:	11 24       	eor	r1, r1
    197c:	30 19       	sub	r19, r0
    197e:	30 5d       	subi	r19, 0xD0	; 208
    1980:	31 93       	st	Z+, r19
    1982:	de f6       	brtc	.-74     	; 0x193a <__ultoa_invert+0xe>
    1984:	cf 01       	movw	r24, r30
    1986:	08 95       	ret
    1988:	46 2f       	mov	r20, r22
    198a:	47 70       	andi	r20, 0x07	; 7
    198c:	40 5d       	subi	r20, 0xD0	; 208
    198e:	41 93       	st	Z+, r20
    1990:	b3 e0       	ldi	r27, 0x03	; 3
    1992:	0f d0       	rcall	.+30     	; 0x19b2 <__ultoa_invert+0x86>
    1994:	c9 f7       	brne	.-14     	; 0x1988 <__ultoa_invert+0x5c>
    1996:	f6 cf       	rjmp	.-20     	; 0x1984 <__ultoa_invert+0x58>
    1998:	46 2f       	mov	r20, r22
    199a:	4f 70       	andi	r20, 0x0F	; 15
    199c:	40 5d       	subi	r20, 0xD0	; 208
    199e:	4a 33       	cpi	r20, 0x3A	; 58
    19a0:	18 f0       	brcs	.+6      	; 0x19a8 <__ultoa_invert+0x7c>
    19a2:	49 5d       	subi	r20, 0xD9	; 217
    19a4:	31 fd       	sbrc	r19, 1
    19a6:	40 52       	subi	r20, 0x20	; 32
    19a8:	41 93       	st	Z+, r20
    19aa:	02 d0       	rcall	.+4      	; 0x19b0 <__ultoa_invert+0x84>
    19ac:	a9 f7       	brne	.-22     	; 0x1998 <__ultoa_invert+0x6c>
    19ae:	ea cf       	rjmp	.-44     	; 0x1984 <__ultoa_invert+0x58>
    19b0:	b4 e0       	ldi	r27, 0x04	; 4
    19b2:	a6 95       	lsr	r26
    19b4:	97 95       	ror	r25
    19b6:	87 95       	ror	r24
    19b8:	77 95       	ror	r23
    19ba:	67 95       	ror	r22
    19bc:	ba 95       	dec	r27
    19be:	c9 f7       	brne	.-14     	; 0x19b2 <__ultoa_invert+0x86>
    19c0:	00 97       	sbiw	r24, 0x00	; 0
    19c2:	61 05       	cpc	r22, r1
    19c4:	71 05       	cpc	r23, r1
    19c6:	08 95       	ret
    19c8:	9b 01       	movw	r18, r22
    19ca:	ac 01       	movw	r20, r24
    19cc:	0a 2e       	mov	r0, r26
    19ce:	06 94       	lsr	r0
    19d0:	57 95       	ror	r21
    19d2:	47 95       	ror	r20
    19d4:	37 95       	ror	r19
    19d6:	27 95       	ror	r18
    19d8:	ba 95       	dec	r27
    19da:	c9 f7       	brne	.-14     	; 0x19ce <__ultoa_invert+0xa2>
    19dc:	62 0f       	add	r22, r18
    19de:	73 1f       	adc	r23, r19
    19e0:	84 1f       	adc	r24, r20
    19e2:	95 1f       	adc	r25, r21
    19e4:	a0 1d       	adc	r26, r0
    19e6:	08 95       	ret

000019e8 <__prologue_saves__>:
    19e8:	2f 92       	push	r2
    19ea:	3f 92       	push	r3
    19ec:	4f 92       	push	r4
    19ee:	5f 92       	push	r5
    19f0:	6f 92       	push	r6
    19f2:	7f 92       	push	r7
    19f4:	8f 92       	push	r8
    19f6:	9f 92       	push	r9
    19f8:	af 92       	push	r10
    19fa:	bf 92       	push	r11
    19fc:	cf 92       	push	r12
    19fe:	df 92       	push	r13
    1a00:	ef 92       	push	r14
    1a02:	ff 92       	push	r15
    1a04:	0f 93       	push	r16
    1a06:	1f 93       	push	r17
    1a08:	cf 93       	push	r28
    1a0a:	df 93       	push	r29
    1a0c:	cd b7       	in	r28, 0x3d	; 61
    1a0e:	de b7       	in	r29, 0x3e	; 62
    1a10:	ca 1b       	sub	r28, r26
    1a12:	db 0b       	sbc	r29, r27
    1a14:	0f b6       	in	r0, 0x3f	; 63
    1a16:	f8 94       	cli
    1a18:	de bf       	out	0x3e, r29	; 62
    1a1a:	0f be       	out	0x3f, r0	; 63
    1a1c:	cd bf       	out	0x3d, r28	; 61
    1a1e:	09 94       	ijmp

00001a20 <__epilogue_restores__>:
    1a20:	2a 88       	ldd	r2, Y+18	; 0x12
    1a22:	39 88       	ldd	r3, Y+17	; 0x11
    1a24:	48 88       	ldd	r4, Y+16	; 0x10
    1a26:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a28:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a2a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a2c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a2e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a30:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a32:	b9 84       	ldd	r11, Y+9	; 0x09
    1a34:	c8 84       	ldd	r12, Y+8	; 0x08
    1a36:	df 80       	ldd	r13, Y+7	; 0x07
    1a38:	ee 80       	ldd	r14, Y+6	; 0x06
    1a3a:	fd 80       	ldd	r15, Y+5	; 0x05
    1a3c:	0c 81       	ldd	r16, Y+4	; 0x04
    1a3e:	1b 81       	ldd	r17, Y+3	; 0x03
    1a40:	aa 81       	ldd	r26, Y+2	; 0x02
    1a42:	b9 81       	ldd	r27, Y+1	; 0x01
    1a44:	ce 0f       	add	r28, r30
    1a46:	d1 1d       	adc	r29, r1
    1a48:	0f b6       	in	r0, 0x3f	; 63
    1a4a:	f8 94       	cli
    1a4c:	de bf       	out	0x3e, r29	; 62
    1a4e:	0f be       	out	0x3f, r0	; 63
    1a50:	cd bf       	out	0x3d, r28	; 61
    1a52:	ed 01       	movw	r28, r26
    1a54:	08 95       	ret

00001a56 <_exit>:
    1a56:	f8 94       	cli

00001a58 <__stop_program>:
    1a58:	ff cf       	rjmp	.-2      	; 0x1a58 <__stop_program>
